//
// ASCoDT - Advanced Scientific Computing Development Toolkit
//
// This file was automatically generated by ASCoDT.
//
// Authors: Tobias Weinzierl, Atanas Atanasov   
//
package cca { 
package cfd { 
  
		interface NSSolver{
		  	 setup(in string inputScenario);
		     solve();
		     solveOneTimestepPhaseOne();
		     solveOneTimestepPhaseTwo();
		     setVelocities(in double velocitiesX [],in double velocitiesY [],in double velocitiesZ []);
		  	 retrieveTimestep(inout double timestep);
		  	 printNSPressure();
		  	 printNSProfiles();
		  	 closeNSProfiles();
		  	 iterateBoundary();
		  	 iterateInner();
		  	 plot();
		}
		interface LBSolver{
		  	 setup(in string inputScenario);
		     solve();
		     solveOneTimestep();
		     setVelocities(in double velocitiesX [],in double velocitiesY [],in double velocitiesZ []);
		  	 setPressure(in double pressure[]);
		  	 setGradients(in double gradients[]);
		  	 closeLBProfiles();
          	 printLBDensity();
             printLBProfiles();
		  	 plot();
		}
		  interface LB2NS {
		  	iterateBoundary();
		  	iterateInner();
		  	retrieveVelocitiesSize(inout int memoryX,inout int memoryY,inout int memoryZ);
		  	retrieveVelocitiesCopy(
		  		inout double velocityX[],
		  		inout double velocityY[],
		  		inout double velocityZ[]
		  		);
		  	
		  }
		  interface NS2LB{
		  	iterate();
		  	retrieveVelocitiesSize(inout int memory);
		  	retrieveVelocitiesCopy(
		  		inout double velocityX[],
		  		inout double velocityY[],
		  		inout double velocityZ[]
		  		);
		  	
		  	retrieveJacobianCopy(
		  		inout double jacobian[]
		  	);
		  	retrievePressureCopy(
		  		inout double pressure[]
		  	);
		  	
  		  }
	 interface Driver{
  		go(in string configFile);
 	 }	

  @target = cxx_remote_socket
  class CouplingDriver implements-all cca.cfd.Driver
  	uses cca.cfd.LBSolver as lb,
  	uses cca.cfd.LB2NS as lb2ns,
  	uses cca.cfd.NS2LB as ns2lb,
  	uses cca.cfd.NSSolver as ns {
  }
  

} 
}
