#ifndef CCA_CFD_COUPLINGDRIVERABSTRACTIMPLEMENTATION_H_
#define CCA_CFD_COUPLINGDRIVERABSTRACTIMPLEMENTATION_H_ 

//
// ASCoDT - Advanced Scientific Computing Development Toolkit
//
// This file was generated by ASCoDT's simplified SIDL compiler.
//
// Authors: Tobias Weinzierl, Atanas Atanasov   
//
#include "cca/cfd/LBSolverNativeDispatcher.h"
#include "cca/cfd/LB2NSNativeDispatcher.h"
#include "cca/cfd/NS2LBNativeDispatcher.h"
#include "cca/cfd/NSSolverNativeDispatcher.h"

#include "cca/cfd/Driver.h"

#include "Component.h"
namespace cca { 
namespace cfd { 
  
     class CouplingDriverAbstractImplementation;
} 
}



class cca::cfd::CouplingDriverAbstractImplementation: public Component ,public cca::cfd::Driver{
     protected:
       cca::cfd::LBSolverNativeDispatcher* _lb;
cca::cfd::LB2NSNativeDispatcher* _lb2ns;
cca::cfd::NS2LBNativeDispatcher* _ns2lb;
cca::cfd::NSSolverNativeDispatcher* _ns;
   
     public:
       CouplingDriverAbstractImplementation();
       virtual ~CouplingDriverAbstractImplementation();
       /**
        * @see Case class 
        */
       void connectns(cca::cfd::NSSolverNativeDispatcher* port);
       void disconnectns();
 
       /**
        * @see Case class 
        */
       void connectns2lb(cca::cfd::NS2LBNativeDispatcher* port);
       void disconnectns2lb();
 
       /**
        * @see Case class 
        */
       void connectlb2ns(cca::cfd::LB2NSNativeDispatcher* port);
       void disconnectlb2ns();
 
       /**
        * @see Case class 
        */
       void connectlb(cca::cfd::LBSolverNativeDispatcher* port);
       void disconnectlb();
 
		void goParallel(const std::string configFile);
};     


#endif
