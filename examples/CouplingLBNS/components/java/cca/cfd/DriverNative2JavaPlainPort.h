#ifndef CCA_CFD_DRIVER2NATIVE2JAVAPLAINPORT_H_
#define CCA_CFD_DRIVER2NATIVE2JAVAPLAINPORT_H_ 

#include "cca/cfd/Driver.h"
#include <jni.h> 
#include <iostream>
//
// ASCoDT - Advanced Scientific Computing Development Toolkit
//
// This file was generated by ASCoDT's simplified SIDL compiler.
//
// Authors: Tobias Weinzierl, Atanas Atanasov   
//
#ifdef __cplusplus
  extern "C" {
#endif


          
JNIEXPORT void JNICALL Java_cca_cfd_DriverNative2JavaPlainPort_createInstance(JNIEnv *env, jobject obj);
JNIEXPORT void JNICALL Java_cca_cfd_DriverNative2JavaPlainPort_destroyInstance(JNIEnv *env, jobject obj,jlong ref);

#ifdef __cplusplus
  }
#endif




namespace cca { 
namespace cfd { 
  
     class DriverNative2JavaPlainPort;
} 
}

class cca::cfd::DriverNative2JavaPlainPort: public cca::cfd::Driver{
  private:
    JavaVM* _jvm;
    jobject _obj;
  public:
    DriverNative2JavaPlainPort(JavaVM* jvm,jobject obj);
    ~DriverNative2JavaPlainPort();
    void go(const std::string configFile);
	void goParallel(const std::string configFile);
};
#endif
