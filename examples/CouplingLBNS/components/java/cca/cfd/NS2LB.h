#ifndef CCA_CFD_NS2LB_H_
#define CCA_CFD_NS2LB_H_ 

//
// ASCoDT - Advanced Scientific Computing Development Toolkit
//
// This file was generated by ASCoDT's simplified SIDL compiler.
//
// Authors: Tobias Weinzierl, Atanas Atanasov   
//

#include <iostream>
#include <string>



namespace cca { 
namespace cfd { 
  
     class NS2LB;
} 
}

class cca::cfd::NS2LB {
  public:
    virtual ~NS2LB(){}
     virtual void retrievePressureCopy(double* pressure, const int pressure_len)=0;
     virtual void retrievePressureCopyParallel(double* pressure, const int pressure_len)=0;
     virtual void retrieveJacobianCopy(double* jacobian, const int jacobian_len)=0;
     virtual void retrieveJacobianCopyParallel(double* jacobian, const int jacobian_len)=0;
     virtual void retrieveVelocitiesCopy(double* velocityX, const int velocityX_len,double* velocityY, const int velocityY_len,double* velocityZ, const int velocityZ_len)=0;
     virtual void retrieveVelocitiesCopyParallel(double* velocityX, const int velocityX_len,double* velocityY, const int velocityY_len,double* velocityZ, const int velocityZ_len)=0;
     virtual void retrieveVelocitiesSize(int& memory)=0;
     virtual void retrieveVelocitiesSizeParallel(int& memory)=0;
     virtual void retrieveTimestep(double& timestep)=0;
     virtual void retrieveTimestepParallel(double& timestep)=0;
     virtual void iterate()=0;
     virtual void iterateParallel()=0;


};

#endif
