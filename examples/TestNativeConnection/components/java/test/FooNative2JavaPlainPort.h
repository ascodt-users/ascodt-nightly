#ifndef TEST_FOO2NATIVE2JAVAPLAINPORT_H_
#define TEST_FOO2NATIVE2JAVAPLAINPORT_H_ 

#include "test/Foo.h"
#include <jni.h> 
#include <iostream>
//
// ASCoDT - Advanced Scientific Computing Development Toolkit
//
// This file was generated by ASCoDT's simplified SIDL compiler.
//
// Authors: Tobias Weinzierl, Atanas Atanasov   
//
#ifdef __cplusplus
  extern "C" {
#endif


          
JNIEXPORT void JNICALL Java_test_FooNative2JavaPlainPort_createInstance(JNIEnv *env, jobject obj);
JNIEXPORT void JNICALL Java_test_FooNative2JavaPlainPort_destroyInstance(JNIEnv *env, jobject obj,jlong ref);

#ifdef __cplusplus
  }
#endif




namespace test { 

     class FooNative2JavaPlainPort;
}

class test::FooNative2JavaPlainPort: public test::Foo{
  private:
    JavaVM* _jvm;
    jobject _obj;
  public:
    FooNative2JavaPlainPort(JavaVM* jvm,jobject obj);
    ~FooNative2JavaPlainPort();
    void bar();
};
#endif
