#ifndef CCA_CFD_LB2NS_H_
#define CCA_CFD_LB2NS_H_ 

//
// ASCoDT - Advanced Scientific Computing Development Toolkit
//
// This file was generated by ASCoDT's simplified SIDL compiler.
//
// Authors: Tobias Weinzierl, Atanas Atanasov   
//

#include <iostream>
#include <string>



namespace cca { 
namespace cfd { 
  
     class LB2NS;
} 
}

class cca::cfd::LB2NS {
  public:
    virtual ~LB2NS(){}
     virtual void retrieveVelocitiesCopy(double* velocityX, const int velocityX_len,double* velocityY, const int velocityY_len,double* velocityZ, const int velocityZ_len)=0;
     virtual void retrieveVelocitiesCopyParallel(double* velocityX, const int velocityX_len,double* velocityY, const int velocityY_len,double* velocityZ, const int velocityZ_len)=0;
     virtual void retrieveVelocitiesSize(int& memoryX,int& memoryY,int& memoryZ)=0;
     virtual void retrieveVelocitiesSizeParallel(int& memoryX,int& memoryY,int& memoryZ)=0;
     virtual void retrieveTimestep(double& dt)=0;
     virtual void retrieveTimestepParallel(double& dt)=0;
     virtual void iterateInner()=0;
     virtual void iterateInnerParallel()=0;
     virtual void iterateBoundary()=0;
     virtual void iterateBoundaryParallel()=0;


};

#endif
