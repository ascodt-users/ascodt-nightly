#ifndef EXAMPLES_HEAT_REGULARGRID2NATIVE2JAVAPLAINPORT_H_
#define EXAMPLES_HEAT_REGULARGRID2NATIVE2JAVAPLAINPORT_H_ 

#include "examples/heat/RegularGrid.h"
#include <jni.h> 
#include <iostream>
//
// ASCoDT - Advanced Scientific Computing Development Toolkit
//
// This file was generated by ASCoDT's simplified SIDL compiler.
//
// Authors: Tobias Weinzierl, Atanas Atanasov   
//
#ifdef __cplusplus
  extern "C" {
#endif


          
JNIEXPORT void JNICALL Java_examples_heat_RegularGridNative2JavaPlainPort_createInstance(JNIEnv *env, jobject obj);
JNIEXPORT void JNICALL Java_examples_heat_RegularGridNative2JavaPlainPort_destroyInstance(JNIEnv *env, jobject obj,jlong ref);

#ifdef __cplusplus
  }
#endif




namespace examples { 
namespace heat { 
  
     class RegularGridNative2JavaPlainPort;
} 
}

class examples::heat::RegularGridNative2JavaPlainPort: public examples::heat::RegularGrid{
  private:
    JavaVM* _jvm;
    jobject _obj;
  public:
    RegularGridNative2JavaPlainPort(JavaVM* jvm,jobject obj);
    ~RegularGridNative2JavaPlainPort();
    void setOffset(const double* offset, const int offset_len);
    void setDomain(const double* domain, const int domain_len);
    void setDimensions(const int* dimensions, const int dimensions_len);
    void addCellScalars(const std::string variableName,const double* scalars, const int scalars_len);
    void render();
};
#endif
