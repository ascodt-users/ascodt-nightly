//
// ASCoDT - Advanced Scientific Computing Development Toolkit
//
// This file was generated by ASCoDT's simplified SIDL compiler.
//
// Authors: Tobias Weinzierl, Atanas Atanasov   
//
package examples.heat;

import vtk.vtkProp;
import de.tum.ascodt.plugin.ASCoDTVTKPlugin;


public class VisualiserBasisJavaImplementation extends examples.heat.VisualiserAbstractJavaImplementation {
	protected VisualiserVTKPipeline _pipeline;
	protected vtkProp _prop;
	public VisualiserBasisJavaImplementation( String identifier ) throws de.tum.ascodt.utils.exceptions.ASCoDTException {
		super(identifier);
		_pipeline = new VisualiserVTKPipeline();
		_prop = _pipeline.createPipeline();
		ASCoDTVTKPlugin.getDefault().getVTKService().addPipeline(_prop);
	}

	@Override
	public void setOffset(double[] offset) {
		_pipeline.setOffset(offset);
	}

	@Override
	public void setDomain(double[] domain) {
		_pipeline.setDomain(domain);
	}

	@Override
	public void setDimensions(int[] dimensions) {
		_pipeline.setDimensions(dimensions);
	}

	@Override
	public void addCellScalars(String variableName, double []scalars) {
		_pipeline.setScalars(scalars);
	}

	@Override
	public void render() {
		_pipeline.update();
		ASCoDTVTKPlugin.getDefault().getVTKService().repaint();
		System.out.println("repaint du shit");
	}
	public void destroy(){
		ASCoDTVTKPlugin.getDefault().getVTKService().removePipeline(_prop); 
		ASCoDTVTKPlugin.getDefault().getVTKService().repaint();
		super.destroy();
	}
	/**
	 * Provides methods block
	 */

}


