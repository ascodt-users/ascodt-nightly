//
// ASCoDT - Advanced Scientific Computing Development Toolkit
//
// This file was generated by ASCoDT's simplified SIDL compiler.
//
// Authors: Tobias Weinzierl, Atanas Atanasov   
//
package de.tum;


public class FooBarNative2NativePlainPort extends FooBarAbstractPort {
  private long _ref;
  public FooBarNative2NativePlainPort() {
    super();
    createInstance();
  }
  /**
   * proxy for the native factory method
   */  
  public native void createInstance();
  
  /**
   * frees the memory of the component
   */
  public native void destroyInstance(long ref);
  
  
  /**
   * Connect a uses port.
   *
   * @throw If already connected to another port.
   * @see Operation with name of any implementing component 
   */
  @Override
  public void connect(FooBar  port) throws de.tum.ascodt.utils.exceptions.ASCoDTException {
    super.connect(port);
    connect(_ref,_destination.getReference());
  }
  
  public native void connect(long ref,long cca_application);
   
  /**
   * Disconnect a port.
   * 
   * @throw If already not connected to type port.
   * @see Operation with name of any implementing component 
   */
  public void disconnect(FooBar  port) throws de.tum.ascodt.utils.exceptions.ASCoDTException {
     super.disconnect(port);
  }
  
  public void destroy(){
     destroyInstance(_ref);
  }
  
  public long getReference(){
    return _ref;
  }
  
  public void setReference(long ref){
     _ref=ref;
  }

  public void foo(final double data[]) {
    //DO NOTHING HERE
  }
  

  public void bar(double data[]) {
    //DO NOTHING HERE
  }
  

  public void reset() {
    //DO NOTHING HERE
  }
  
  

}
 


