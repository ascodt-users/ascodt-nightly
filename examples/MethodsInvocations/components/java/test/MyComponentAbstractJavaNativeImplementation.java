//
// ASCoDT - Advanced Scientific Computing Development Toolkit
//
// This file was generated by ASCoDT's simplified SIDL compiler.
//
// Authors: Tobias Weinzierl, Atanas Atanasov   
//
package test;


public abstract class MyComponentAbstractJavaNativeImplementation implements MyComponent {
  /**
   * Semaphore object.
   */
  private boolean  _isLocked;
  
  private String   _instanceName;
  
  protected long     _ref;
  public void setProjectLocation(String location){
  }

  public MyComponentAbstractJavaNativeImplementation(String instanceName) {
    assert(instanceName!=null); 
    _instanceName = instanceName;
    _isLocked     = false;
   
    System.load("/work_fast/atanasoa/Programme/runtime-HelloSocketFortran/MethodsInvocations/native/libMyComponent.so");
    createInstance();
  }
  public long getNativeReference(){
     return _ref;
  }
  
  /**
   * proxy for the native factory method
   */  
  public native  void createInstance();
  
  /**
   * frees the memory of the component
   */
  public native  void destroyInstance(long ref);
 
  /**
   * @see de.tum.ascodt.repository.entities
   */
  public void lock() {
    
  }

 
  /**
   * @see de.tum.ascodt.repository.entities
   */
  public void unlock() {
   
  }
  

  
    
  /**
   * @see de.tum.ascodt.repository.entities
   */
  public de.tum.ascodt.repository.Target getTarget() {
    return de.tum.ascodt.repository.Target.createCxxNativeTarget();
  }
  
  public de.tum.ascodt.repository.TargetParameters getTargetParameters(){
    return null;
  }

  /**
   * @see de.tum.ascodt.repository.entities
   */
  public String getInstanceName() {
    return _instanceName;
  }
  
  /**
   * @see de.tum.ascodt.repository.entities
   */
  public void setInstanceName(String instanceName){
     _instanceName=instanceName;
  }
  
  /**
   * @see de.tum.ascodt.repository.entities
   */
  public void destroy(){
     destroyInstance(_ref);
  }
  
  public long getReference(){
    return _ref;
  }
  
  public void setReference(long ref) {
     _ref=ref;
  }

}
 


