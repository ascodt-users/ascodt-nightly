package de.tum.ascodt.plugin;


import java.lang.reflect.Method;

import org.eclipse.ui.plugin.AbstractUIPlugin;

import de.tum.ascodt.plugin.services.VTKService;
import de.tum.ascodt.plugin.utils.exceptions.ErrorWriterDevice;


public class ASCoDTVTKPlugin extends AbstractUIPlugin {
  public static String ID = ASCoDTVTKPlugin.class.getCanonicalName();
  private static ASCoDTVTKPlugin _singleton;

  public static ASCoDTVTKPlugin getDefault() {
    if (_singleton == null) {
      return new ASCoDTVTKPlugin();
    }

    return _singleton;
  }

  private VTKService _vtkService;

  public ASCoDTVTKPlugin() {
    _singleton = this;
    initializeSwing();
    loadNativeLibraries();
    initialiseServices();
  }

  public VTKService getVTKService() {
    return _vtkService;
  }

  private void initialiseServices() {
    _vtkService = new VTKService();
  }

  void initializeSwing() {
    // The default X error handler for GTK calls `exit()' after printing the X
    // error. Normally, this isn't that big a problem for SWT applications
    // because they don't cause X errors. However, sometimes X errors are
    // generated by AWT what makes SWT to exit. The fix is to hide all X errors
    // when AWT is running.
    try {
      Class<?>[] emptyClass = new Class[0];
      Object[] emptyObject = new Object[0];
      Class<?> clazz = Class.forName("javax.swing.UIManager");
      Method method = clazz.getMethod("getDefaults", emptyClass);
      if (method != null) {
        method.invoke(clazz, emptyObject);
      }
    } catch (Throwable e) {
      ErrorWriterDevice.getInstance().println(e);
    }
  }

  public void loadNativeLibraries() {
    // VTK Implementation Native Libraries {{{
    // =========================================================================
    // NOTE: If we wish to bundle VTK native libraries with the plugin (as we do
    // now), i.e. not rely on the fact whether the appropriate version of VTK is
    // already installed on the target system, then we have to load all native
    // libraries (containing VTK implementation) manually and in the right
    // order. The {@link vtk.vtkNativeLibrary#LoadAllNativeLibraries()
    // vtk.vtkNativeLibrary#LoadAllNativeLibraries()} method does not take care
    // of this. Since these libraries have complex dependencies between each
    // other and they are not located in a directory that OS knows about, we
    // cannot rely on automatic shared library dependency resolution by OS. As a
    // result, this block aims to load all VTK native libraries in a proper
    // order according to their dependencies. DO NOT CHANGE!
    // -------------------------------------------------------------------------
    System.loadLibrary("vtkDICOMParser-6.1");
    System.loadLibrary("vtkalglib-6.1");
    System.loadLibrary("vtkexpat-6.1");
    System.loadLibrary("vtkjpeg-6.1");
    System.loadLibrary("vtkjsoncpp-6.1");
    System.loadLibrary("vtkoggtheora-6.1");
    System.loadLibrary("vtkproj4-6.1");
    System.loadLibrary("vtksys-6.1");
    System.loadLibrary("vtkverdict-6.1");
    System.loadLibrary("vtkzlib-6.1");
    // -------------------------------------------------------------------------
    System.loadLibrary("vtkfreetype-6.1");
    System.loadLibrary("vtkhdf5-6.1");
    System.loadLibrary("vtkhdf5_hl-6.1");
    System.loadLibrary("vtklibxml2-6.1");
    System.loadLibrary("vtkmetaio-6.1");
    System.loadLibrary("vtkpng-6.1");
    System.loadLibrary("vtktiff-6.1");
    // -------------------------------------------------------------------------
    System.loadLibrary("vtkNetCDF-6.1");
    System.loadLibrary("vtkftgl-6.1");
    System.loadLibrary("vtkgl2ps-6.1");
    // -------------------------------------------------------------------------
    System.loadLibrary("vtkNetCDF_cxx-6.1");
    System.loadLibrary("vtkexoIIc-6.1");
    // -------------------------------------------------------------------------
    System.loadLibrary("vtkCommonCore-6.1");
    // -------------------------------------------------------------------------
    System.loadLibrary("vtkCommonColor-6.1");
    System.loadLibrary("vtkCommonMath-6.1");
    System.loadLibrary("vtkCommonMisc-6.1");
    System.loadLibrary("vtkCommonSystem-6.1");
    System.loadLibrary("vtkWrappingJava-6.1");
    // -------------------------------------------------------------------------
    System.loadLibrary("vtkCommonTransforms-6.1");
    // -------------------------------------------------------------------------
    System.loadLibrary("vtkCommonDataModel-6.1");
    // -------------------------------------------------------------------------
    System.loadLibrary("vtkCommonComputationalGeometry-6.1");
    System.loadLibrary("vtkCommonExecutionModel-6.1");
    // -------------------------------------------------------------------------
    System.loadLibrary("vtkFiltersCore-6.1");
    System.loadLibrary("vtkFiltersHyperTree-6.1");
    System.loadLibrary("vtkFiltersProgrammable-6.1");
    System.loadLibrary("vtkFiltersSelection-6.1");
    System.loadLibrary("vtkFiltersVerdict-6.1");
    System.loadLibrary("vtkIOCore-6.1");
    System.loadLibrary("vtkIOEnSight-6.1");
    System.loadLibrary("vtkIOImage-6.1");
    System.loadLibrary("vtkIOMovie-6.1");
    System.loadLibrary("vtkIONetCDF-6.1");
    System.loadLibrary("vtkIOVideo-6.1");
    System.loadLibrary("vtkImagingCore-6.1");
    System.loadLibrary("vtkImagingHybrid-6.1");
    System.loadLibrary("vtkImagingMath-6.1");
    // -------------------------------------------------------------------------
    System.loadLibrary("vtkFiltersGeneral-6.1");
    System.loadLibrary("vtkFiltersGeometry-6.1");
    System.loadLibrary("vtkIOGeometry-6.1");
    System.loadLibrary("vtkIOLegacy-6.1");
    System.loadLibrary("vtkIOPLY-6.1");
    System.loadLibrary("vtkIOSQL-6.1");
    System.loadLibrary("vtkIOXMLParser-6.1");
    System.loadLibrary("vtkImagingColor-6.1");
    System.loadLibrary("vtkImagingFourier-6.1");
    System.loadLibrary("vtkImagingSources-6.1");
    System.loadLibrary("vtkImagingStatistics-6.1");
    System.loadLibrary("vtkImagingStencil-6.1");
    // -------------------------------------------------------------------------
    System.loadLibrary("vtkFiltersSMP-6.1");
    System.loadLibrary("vtkFiltersSources-6.1");
    System.loadLibrary("vtkFiltersStatistics-6.1");
    System.loadLibrary("vtkFiltersTexture-6.1");
    System.loadLibrary("vtkIOExodus-6.1");
    System.loadLibrary("vtkIOLSDyna-6.1");
    System.loadLibrary("vtkIOXML-6.1");
    System.loadLibrary("vtkImagingGeneral-6.1");
    System.loadLibrary("vtkParallelCore-6.1");
    // -------------------------------------------------------------------------
    System.loadLibrary("vtkFiltersAMR-6.1");
    System.loadLibrary("vtkFiltersExtraction-6.1");
    System.loadLibrary("vtkFiltersFlowPaths-6.1");
    System.loadLibrary("vtkFiltersGeneric-6.1");
    System.loadLibrary("vtkFiltersImaging-6.1");
    System.loadLibrary("vtkFiltersModeling-6.1");
    System.loadLibrary("vtkImagingMorphological-6.1");
    // -------------------------------------------------------------------------
    System.loadLibrary("vtkIOAMR-6.1");
    System.loadLibrary("vtkInfovisCore-6.1");
    System.loadLibrary("vtkRenderingCore-6.1");
    // -------------------------------------------------------------------------
    System.loadLibrary("vtkDomainsChemistry-6.1");
    System.loadLibrary("vtkFiltersHybrid-6.1");
    System.loadLibrary("vtkFiltersParallel-6.1");
    System.loadLibrary("vtkIOImport-6.1");
    System.loadLibrary("vtkIOInfovis-6.1");
    System.loadLibrary("vtkInfovisLayout-6.1");
    System.loadLibrary("vtkInteractionStyle-6.1");
    System.loadLibrary("vtkRenderingFreeType-6.1");
    System.loadLibrary("vtkRenderingImage-6.1");
    System.loadLibrary("vtkRenderingLOD-6.1");
    System.loadLibrary("vtkRenderingOpenGL-6.1");
    System.loadLibrary("vtkRenderingVolume-6.1");
    System.loadLibrary("vtkViewsCore-6.1");
    // -------------------------------------------------------------------------
    System.loadLibrary("vtkFiltersParallelImaging-6.1");
    System.loadLibrary("vtkIOMINC-6.1");
    System.loadLibrary("vtkIOParallel-6.1");
    System.loadLibrary("vtkRenderingAnnotation-6.1");
    System.loadLibrary("vtkRenderingContext2D-6.1");
    System.loadLibrary("vtkRenderingFreeTypeOpenGL-6.1");
    System.loadLibrary("vtkRenderingLIC-6.1");
    System.loadLibrary("vtkRenderingLabel-6.1");
    System.loadLibrary("vtkRenderingVolumeAMR-6.1");
    System.loadLibrary("vtkRenderingVolumeOpenGL-6.1");
    System.loadLibrary("vtkViewsContext2D-6.1");
    // -------------------------------------------------------------------------
    System.loadLibrary("vtkChartsCore-6.1");
    System.loadLibrary("vtkInteractionWidgets-6.1");
    System.loadLibrary("vtkRenderingGL2PS-6.1");
    // -------------------------------------------------------------------------
    System.loadLibrary("vtkGeovisCore-6.1");
    System.loadLibrary("vtkIOExport-6.1");
    System.loadLibrary("vtkInteractionImage-6.1");
    System.loadLibrary("vtkViewsInfovis-6.1");
    // -------------------------------------------------------------------------
    System.loadLibrary("vtkViewsGeovis-6.1");
    // =========================================================================
    // }}} VTK Implementation Native Libraries

    // VTK JNI Libraries {{{
    // =========================================================================
    // NOTE: If we wish to bundle VTK JNI libraries with the plugin (as we do
    // now), i.e. not rely on the fact whether the appropriate version of VTK is
    // already installed on the target system, then it's important not to use
    // {@link vtk.vtkNativeLibrary#LoadAllNativeLibraries()
    // vtk.vtkNativeLibrary#LoadAllNativeLibraries()} when loading VTK JNI
    // libraries as in the implementation of this method the libraries are
    // loaded in alphabetical order. Since these libraries have complex
    // dependencies between each other and they are not located in a directory
    // that OS knows about, we cannot rely on automatic shared library
    // dependency resolution by OS. As a result, this block aims to load all VTK
    // JNI libraries in a proper order according to their dependencies. DO NOT
    // CHANGE!
    // -------------------------------------------------------------------------
    System.loadLibrary("vtkCommonCoreJava");
    // -------------------------------------------------------------------------
    System.loadLibrary("vtkCommonMathJava");
    System.loadLibrary("vtkCommonMiscJava");
    System.loadLibrary("vtkCommonSystemJava");
    System.loadLibrary("vtkCommonTransformsJava");
    System.loadLibrary("vtkIOImportJava");
    System.loadLibrary("vtkIOXMLParserJava");
    System.loadLibrary("vtkInteractionImageJava");
    System.loadLibrary("vtkParallelCoreJava");
    System.loadLibrary("vtkRenderingGL2PSJava");
    // -------------------------------------------------------------------------
    System.loadLibrary("vtkCommonDataModelJava");
    // -------------------------------------------------------------------------
    System.loadLibrary("vtkCommonColorJava");
    System.loadLibrary("vtkCommonComputationalGeometryJava");
    System.loadLibrary("vtkCommonExecutionModelJava");
    // -------------------------------------------------------------------------
    System.loadLibrary("vtkFiltersAMRJava");
    System.loadLibrary("vtkFiltersCoreJava");
    System.loadLibrary("vtkFiltersExtractionJava");
    System.loadLibrary("vtkFiltersFlowPathsJava");
    System.loadLibrary("vtkFiltersGenericJava");
    System.loadLibrary("vtkFiltersGeometryJava");
    System.loadLibrary("vtkFiltersHybridJava");
    System.loadLibrary("vtkFiltersHyperTreeJava");
    System.loadLibrary("vtkFiltersProgrammableJava");
    System.loadLibrary("vtkFiltersSelectionJava");
    System.loadLibrary("vtkFiltersSourcesJava");
    System.loadLibrary("vtkFiltersStatisticsJava");
    System.loadLibrary("vtkFiltersTextureJava");
    System.loadLibrary("vtkFiltersVerdictJava");
    System.loadLibrary("vtkIOAMRJava");
    System.loadLibrary("vtkIOCoreJava");
    System.loadLibrary("vtkIOEnSightJava");
    System.loadLibrary("vtkIOImageJava");
    System.loadLibrary("vtkIOLSDynaJava");
    System.loadLibrary("vtkIOMovieJava");
    System.loadLibrary("vtkIONetCDFJava");
    System.loadLibrary("vtkIOVideoJava");
    System.loadLibrary("vtkIOXMLJava");
    System.loadLibrary("vtkImagingCoreJava");
    System.loadLibrary("vtkImagingHybridJava");
    System.loadLibrary("vtkImagingMathJava");
    System.loadLibrary("vtkImagingSourcesJava");
    System.loadLibrary("vtkImagingStatisticsJava");
    System.loadLibrary("vtkInfovisCoreJava");
    System.loadLibrary("vtkInfovisLayoutJava");
    System.loadLibrary("vtkRenderingCoreJava");
    System.loadLibrary("vtkViewsCoreJava");
    // -------------------------------------------------------------------------
    System.loadLibrary("vtkDomainsChemistryJava");
    System.loadLibrary("vtkFiltersGeneralJava");
    System.loadLibrary("vtkFiltersImagingJava");
    System.loadLibrary("vtkIOExodusJava");
    System.loadLibrary("vtkIOExportJava");
    System.loadLibrary("vtkIOGeometryJava");
    System.loadLibrary("vtkIOLegacyJava");
    System.loadLibrary("vtkIOMINCJava");
    System.loadLibrary("vtkIOPLYJava");
    System.loadLibrary("vtkIOSQLJava");
    System.loadLibrary("vtkImagingColorJava");
    System.loadLibrary("vtkImagingFourierJava");
    System.loadLibrary("vtkImagingGeneralJava");
    System.loadLibrary("vtkImagingStencilJava");
    System.loadLibrary("vtkInteractionStyleJava");
    System.loadLibrary("vtkInteractionWidgetsJava");
    System.loadLibrary("vtkRenderingAnnotationJava");
    System.loadLibrary("vtkRenderingContext2DJava");
    System.loadLibrary("vtkRenderingFreeTypeJava");
    System.loadLibrary("vtkRenderingFreeTypeOpenGLJava");
    System.loadLibrary("vtkRenderingImageJava");
    System.loadLibrary("vtkRenderingLICJava");
    System.loadLibrary("vtkRenderingLODJava");
    System.loadLibrary("vtkRenderingLabelJava");
    System.loadLibrary("vtkRenderingOpenGLJava");
    System.loadLibrary("vtkRenderingVolumeJava");
    System.loadLibrary("vtkViewsContext2DJava");
    // -------------------------------------------------------------------------
    System.loadLibrary("vtkChartsCoreJava");
    System.loadLibrary("vtkFiltersModelingJava");
    System.loadLibrary("vtkFiltersParallelImagingJava");
    System.loadLibrary("vtkFiltersSMPJava");
    System.loadLibrary("vtkGeovisCoreJava");
    System.loadLibrary("vtkIOInfovisJava");
    System.loadLibrary("vtkIOParallelJava");
    System.loadLibrary("vtkImagingMorphologicalJava");
    System.loadLibrary("vtkRenderingVolumeAMRJava");
    System.loadLibrary("vtkRenderingVolumeOpenGLJava");
    System.loadLibrary("vtkViewsInfovisJava");
    // -------------------------------------------------------------------------
    System.loadLibrary("vtkFiltersParallelJava");
    System.loadLibrary("vtkViewsGeovisJava");
    // =========================================================================
    // }}} VTK JNI Libraries
  }
}
