//
// ASCoDT - Advanced Scientific Computing Development Toolkit
//
// This file was generated by ASCoDT's simplified SIDL compiler.
//
// Authors: Tobias Weinzierl, Atanas Atanasov   
//
__OPEN_PACKAGE__;


public abstract class __COMPONENT_NAME__AbstractJavaImplementation extends SocketComponent implements __COMPONENT_NAME__{
  protected __SOCKET_SERVER_UI__ _appTab;
  protected String   _instanceName;
  protected String  _projectLocation;
  public __COMPONENT_NAME__AbstractJavaImplementation( String instanceName ) throws de.tum.ascodt.utils.exceptions.ASCoDTException  {
    super("127.0.0.1");
    _instanceName = instanceName;
    _appTab = new __SOCKET_SERVER_UI__("__COMPONENT_NAME__",this, __APPS_CONTAINER__.ID);
    _appTab.setVisible(true);
    _appTab.addListener(this);
    if(_appTab.hasApplicationSettings())
          _appTab.execute();
  }
  
  public de.tum.ascodt.repository.Target getTarget() {
     return de.tum.ascodt.repository.Target.create__LANG__RemoteSocketTarget();
  }
  
  public de.tum.ascodt.repository.TargetParameters getTargetParameters(){
     return de.tum.ascodt.repository.TargetParameters.createRemoteSocketParameters(
          _appTab.getHost(),
          _appTab.getPort()
          );
  }

  public long getReference(){
    return 0;
  }  
  
  public void setReference(long ref){
   
  }
  
  public void setProjectLocation(String location){
     _projectLocation=location;
     _appTab.setProjectLocation(location);
     if(_appTab.hasApplicationSettings())
          _appTab.execute();
  } 
  /**
   * @see de.tum.ascodt.repository.entities
   */
  public void lock() {
    
  }

 
  /**
   * @see de.tum.ascodt.repository.entities
   */
  public void unlock() {
    
  }
  
 
  public void destroy() {
     try{
          if(isConnected())
               sendIntData(1);
     }catch(de.tum.ascodt.utils.exceptions.ASCoDTException e){
          de.tum.ascodt.plugin.utils.exceptions.ErrorWriterDevice.getInstance().println(e);
     }
     super.close();
     _appTab.removeListener(this);
     _appTab.setVisible(false);
     _appTab.dispose();
          
   
  }
  
  public boolean isValid() {
     return true;
  }


  public boolean hasGUI() {
    // @todo Insert your code here
    return false;
  }
  
  
  public void openGUI() {
    // @todo Insert your code here
  }
  
  
  public void closeGUI() {
    // @todo Insert your code here
  }
  
  @Override
  public String getInstanceName() {
    return _instanceName;
  }

  @Override
  public void setInstanceName(String instanceName) {
    _instanceName=instanceName;
  }
  
  public void createInstance(){
     
  }
 
  public void destroyInstance(){
  
  }
 
  
  -- INSERT HERE --


}
 

__CLOSE_PACKAGE__
