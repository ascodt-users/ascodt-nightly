//
// ASCoDT - Advanced Scientific Computing Development Toolkit
//
// This file was generated by ASCoDT's simplified SIDL compiler.
//
// Authors: Tobias Weinzierl, Atanas Atanasov   
//
__OPEN_PACKAGE__;


public abstract class __COMPONENT_NAME__AbstractJavaImplementation implements __COMPONENT_NAME__ {
  /**
   * Semaphore object.
   */
  private boolean  _isLocked;
  
  private String   _instanceName;

  private long _reference;
  public __COMPONENT_NAME__AbstractJavaImplementation(String instanceName) {
    assert(instanceName!=null); 
    _instanceName = instanceName;
    
  }
    
  public long getReference(){
    return _reference;
  }  
  
  public void setReference(long reference){
     _reference = reference;
  }
  /**
   * @see de.tum.ascodt.repository.entities
   */
  public void lock() {
    
  }

 
  /**
   * @see de.tum.ascodt.repository.entities
   */
  public void unlock() {
    
  }
  

    
  /**
   * @see de.tum.ascodt.repository.entities
   */
  public de.tum.ascodt.repository.Target getTarget() {
    return de.tum.ascodt.repository.Target.createJavaLocalTarget();
  }
  

  /**
   * @see de.tum.ascodt.repository.entities
   */
  public String getInstanceName() {
    return _instanceName;
  }
  
  /**
   * @see de.tum.ascodt.repository.entities
   */
  public void setInstanceName(String instanceName){
     _instanceName=instanceName;
  }
  
  /**
   * @see de.tum.ascodt.repository.entities
   */
  /**
   * @see de.tum.ascodt.repository.entities
   */
  public void destroy(){
  
  }
  
  public boolean isValid() {
     return true;
  }


  public boolean hasGUI() {
    // @todo Insert your code here
    return false;
  }
  
  
  public void openGUI() {
    
  }
  
  
  public void closeGUI() {
    
  }

  
  -- INSERT HERE --

}
 

__CLOSE_PACKAGE__
