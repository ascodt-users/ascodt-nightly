/* This file was generated by SableCC (http://www.sablecc.org/). */

package de.tum.ascodt.sidlcompiler.frontend.parser;


import java.io.BufferedInputStream;
import java.io.DataInputStream;
import java.io.IOException;
import java.util.ArrayList;
import java.util.LinkedList;
import java.util.List;
import java.util.ListIterator;

import de.tum.ascodt.sidlcompiler.frontend.analysis.Analysis;
import de.tum.ascodt.sidlcompiler.frontend.analysis.AnalysisAdapter;
import de.tum.ascodt.sidlcompiler.frontend.lexer.Lexer;
import de.tum.ascodt.sidlcompiler.frontend.lexer.LexerException;
import de.tum.ascodt.sidlcompiler.frontend.node.AAutoEnumeratorEnumerator;
import de.tum.ascodt.sidlcompiler.frontend.node.ABoolBuiltInType;
import de.tum.ascodt.sidlcompiler.frontend.node.AClassPackageElement;
import de.tum.ascodt.sidlcompiler.frontend.node.ADeclaration;
import de.tum.ascodt.sidlcompiler.frontend.node.ADoubleBuiltInType;
import de.tum.ascodt.sidlcompiler.frontend.node.AEnumDeclarationPackageElement;
import de.tum.ascodt.sidlcompiler.frontend.node.AIntBuiltInType;
import de.tum.ascodt.sidlcompiler.frontend.node.AInterfacePackageElement;
import de.tum.ascodt.sidlcompiler.frontend.node.AOpaqueBuiltInType;
import de.tum.ascodt.sidlcompiler.frontend.node.AOperation;
import de.tum.ascodt.sidlcompiler.frontend.node.APackage;
import de.tum.ascodt.sidlcompiler.frontend.node.AParameterArrayInEnumParameter;
import de.tum.ascodt.sidlcompiler.frontend.node.AParameterArrayInParameter;
import de.tum.ascodt.sidlcompiler.frontend.node.AParameterArrayOutEnumParameter;
import de.tum.ascodt.sidlcompiler.frontend.node.AParameterArrayOutParameter;
import de.tum.ascodt.sidlcompiler.frontend.node.AParameterInEnumParameter;
import de.tum.ascodt.sidlcompiler.frontend.node.AParameterInParameter;
import de.tum.ascodt.sidlcompiler.frontend.node.AParameterOutEnumParameter;
import de.tum.ascodt.sidlcompiler.frontend.node.AParameterOutParameter;
import de.tum.ascodt.sidlcompiler.frontend.node.ASpecificEnumeratorEnumerator;
import de.tum.ascodt.sidlcompiler.frontend.node.AStringBuiltInType;
import de.tum.ascodt.sidlcompiler.frontend.node.ASubpackagePackageElement;
import de.tum.ascodt.sidlcompiler.frontend.node.AUserDefinedType;
import de.tum.ascodt.sidlcompiler.frontend.node.AUses;
import de.tum.ascodt.sidlcompiler.frontend.node.EOF;
import de.tum.ascodt.sidlcompiler.frontend.node.Node;
import de.tum.ascodt.sidlcompiler.frontend.node.PBuiltInType;
import de.tum.ascodt.sidlcompiler.frontend.node.PDeclaration;
import de.tum.ascodt.sidlcompiler.frontend.node.PEnumerator;
import de.tum.ascodt.sidlcompiler.frontend.node.POperation;
import de.tum.ascodt.sidlcompiler.frontend.node.PPackage;
import de.tum.ascodt.sidlcompiler.frontend.node.PPackageElement;
import de.tum.ascodt.sidlcompiler.frontend.node.PParameter;
import de.tum.ascodt.sidlcompiler.frontend.node.PUserDefinedType;
import de.tum.ascodt.sidlcompiler.frontend.node.PUses;
import de.tum.ascodt.sidlcompiler.frontend.node.Start;
import de.tum.ascodt.sidlcompiler.frontend.node.Switchable;
import de.tum.ascodt.sidlcompiler.frontend.node.TDecimalConstant;
import de.tum.ascodt.sidlcompiler.frontend.node.TIdentifier;
import de.tum.ascodt.sidlcompiler.frontend.node.Token;


@SuppressWarnings("nls")
public class Parser {
  public final Analysis ignoredTokens = new AnalysisAdapter();

  protected ArrayList nodeList;

  private final Lexer lexer;
  private final ListIterator stack = new LinkedList().listIterator();
  private int last_pos;
  private int last_line;
  private Token last_token;
  private final TokenIndex converter = new TokenIndex();
  private final int[] action = new int[2];

  private final static int SHIFT = 0;
  private final static int REDUCE = 1;
  private final static int ACCEPT = 2;
  private final static int ERROR = 3;

  private static int[][][] actionTable;

  /*
   * {
   * {{-1, ERROR, 0}, {18, SHIFT, 1}, },
   * {{-1, ERROR, 1}, {29, SHIFT, 5}, },
   * {{-1, ERROR, 2}, {31, ACCEPT, -1}, },
   * {{-1, REDUCE, 0}, },
   * {{-1, REDUCE, 1}, {18, SHIFT, 1}, },
   * {{-1, ERROR, 5}, {5, SHIFT, 7}, },
   * {{-1, REDUCE, 2}, },
   * {{-1, ERROR, 7}, {18, SHIFT, 1}, {19, SHIFT, 8}, {20, SHIFT, 9}, {21,
   * SHIFT, 10}, {26, SHIFT, 11}, },
   * {{-1, ERROR, 8}, {29, SHIFT, 15}, },
   * {{-1, ERROR, 9}, {9, SHIFT, 16}, },
   * {{-1, ERROR, 10}, {29, SHIFT, 17}, },
   * {{-1, ERROR, 11}, {29, SHIFT, 18}, },
   * {{-1, REDUCE, 6}, },
   * {{-1, ERROR, 13}, {6, SHIFT, 19}, {18, SHIFT, 1}, {19, SHIFT, 8}, {20,
   * SHIFT, 9}, {21, SHIFT, 10}, {26, SHIFT, 11}, },
   * {{-1, REDUCE, 4}, },
   * {{-1, ERROR, 15}, {5, SHIFT, 21}, {23, SHIFT, 22}, {24, SHIFT, 23}, },
   * {{-1, ERROR, 16}, {29, SHIFT, 25}, },
   * {{-1, ERROR, 17}, {5, SHIFT, 26}, {22, SHIFT, 27}, },
   * {{-1, ERROR, 18}, {5, SHIFT, 28}, },
   * {{-1, REDUCE, 3}, },
   * {{-1, REDUCE, 5}, },
   * {{-1, ERROR, 21}, {6, SHIFT, 29}, },
   * {{-1, ERROR, 22}, {29, SHIFT, 30}, },
   * {{-1, ERROR, 23}, {29, SHIFT, 30}, },
   * {{-1, ERROR, 24}, {5, SHIFT, 34}, },
   * {{-1, ERROR, 25}, {19, SHIFT, 35}, },
   * {{-1, ERROR, 26}, {6, SHIFT, 36}, {29, SHIFT, 37}, },
   * {{-1, ERROR, 27}, {29, SHIFT, 30}, },
   * {{-1, ERROR, 28}, {29, SHIFT, 41}, },
   * {{-1, REDUCE, 7}, },
   * {{-1, REDUCE, 22}, {3, SHIFT, 44}, },
   * {{-1, REDUCE, 24}, {2, SHIFT, 45}, },
   * {{-1, ERROR, 32}, {5, SHIFT, 46}, {24, SHIFT, 23}, },
   * {{-1, ERROR, 33}, {25, SHIFT, 48}, },
   * {{-1, ERROR, 34}, {6, SHIFT, 49}, },
   * {{-1, ERROR, 35}, {29, SHIFT, 50}, },
   * {{-1, REDUCE, 15}, },
   * {{-1, ERROR, 37}, {7, SHIFT, 51}, },
   * {{-1, ERROR, 38}, {6, SHIFT, 52}, },
   * {{-1, ERROR, 39}, {4, SHIFT, 53}, },
   * {{-1, ERROR, 40}, {5, SHIFT, 54}, },
   * {{-1, REDUCE, 51}, {9, SHIFT, 55}, },
   * {{-1, ERROR, 42}, {6, SHIFT, 56}, },
   * {{-1, REDUCE, 30}, {2, SHIFT, 57}, },
   * {{-1, ERROR, 44}, {29, SHIFT, 30}, },
   * {{-1, ERROR, 45}, {29, SHIFT, 30}, },
   * {{-1, ERROR, 46}, {6, SHIFT, 60}, },
   * {{-1, ERROR, 47}, {5, SHIFT, 61}, },
   * {{-1, ERROR, 48}, {29, SHIFT, 62}, },
   * {{-1, REDUCE, 9}, },
   * {{-1, ERROR, 50}, {5, SHIFT, 63}, {23, SHIFT, 64}, {24, SHIFT, 23}, },
   * {{-1, ERROR, 51}, {8, SHIFT, 66}, {16, SHIFT, 67}, {17, SHIFT, 68}, },
   * {{-1, REDUCE, 16}, },
   * {{-1, REDUCE, 26}, {29, SHIFT, 37}, },
   * {{-1, ERROR, 54}, {6, SHIFT, 72}, {29, SHIFT, 37}, },
   * {{-1, ERROR, 55}, {27, SHIFT, 74}, },
   * {{-1, ERROR, 56}, {4, SHIFT, 75}, },
   * {{-1, ERROR, 57}, {29, SHIFT, 41}, },
   * {{-1, REDUCE, 23}, },
   * {{-1, REDUCE, 25}, },
   * {{-1, REDUCE, 8}, },
   * {{-1, ERROR, 61}, {6, SHIFT, 77}, },
   * {{-1, REDUCE, 20}, {2, SHIFT, 78}, },
   * {{-1, ERROR, 63}, {6, SHIFT, 79}, },
   * {{-1, ERROR, 64}, {29, SHIFT, 30}, },
   * {{-1, ERROR, 65}, {5, SHIFT, 81}, },
   * {{-1, REDUCE, 48}, },
   * {{-1, ERROR, 67}, {10, SHIFT, 82}, {11, SHIFT, 83}, {12, SHIFT, 84}, {13,
   * SHIFT, 85}, {14, SHIFT, 86}, {29, SHIFT, 87}, },
   * {{-1, ERROR, 68}, {10, SHIFT, 82}, {11, SHIFT, 83}, {12, SHIFT, 84}, {13,
   * SHIFT, 85}, {14, SHIFT, 86}, {29, SHIFT, 87}, },
   * {{-1, ERROR, 69}, {8, SHIFT, 93}, },
   * {{-1, REDUCE, 28}, {2, SHIFT, 94}, },
   * {{-1, REDUCE, 27}, },
   * {{-1, REDUCE, 17}, },
   * {{-1, ERROR, 73}, {6, SHIFT, 95}, },
   * {{-1, REDUCE, 52}, },
   * {{-1, REDUCE, 19}, },
   * {{-1, REDUCE, 31}, },
   * {{-1, REDUCE, 10}, },
   * {{-1, ERROR, 78}, {24, SHIFT, 23}, },
   * {{-1, REDUCE, 11}, },
   * {{-1, ERROR, 80}, {5, SHIFT, 97}, {24, SHIFT, 23}, },
   * {{-1, ERROR, 81}, {6, SHIFT, 99}, },
   * {{-1, REDUCE, 32}, },
   * {{-1, REDUCE, 33}, },
   * {{-1, REDUCE, 34}, },
   * {{-1, REDUCE, 35}, },
   * {{-1, REDUCE, 36}, },
   * {{-1, REDUCE, 46}, {3, SHIFT, 100}, },
   * {{-1, ERROR, 88}, {29, SHIFT, 101}, },
   * {{-1, ERROR, 89}, {29, SHIFT, 102}, },
   * {{-1, REDUCE, 45}, },
   * {{-1, ERROR, 91}, {29, SHIFT, 103}, },
   * {{-1, ERROR, 92}, {29, SHIFT, 104}, },
   * {{-1, REDUCE, 49}, },
   * {{-1, ERROR, 94}, {16, SHIFT, 67}, {17, SHIFT, 68}, },
   * {{-1, REDUCE, 18}, },
   * {{-1, REDUCE, 21}, },
   * {{-1, ERROR, 97}, {6, SHIFT, 106}, },
   * {{-1, ERROR, 98}, {5, SHIFT, 107}, },
   * {{-1, REDUCE, 13}, },
   * {{-1, ERROR, 100}, {29, SHIFT, 87}, },
   * {{-1, REDUCE, 37}, {15, SHIFT, 109}, },
   * {{-1, REDUCE, 41}, {15, SHIFT, 110}, },
   * {{-1, REDUCE, 38}, {15, SHIFT, 111}, },
   * {{-1, REDUCE, 42}, {15, SHIFT, 112}, },
   * {{-1, REDUCE, 29}, },
   * {{-1, REDUCE, 12}, },
   * {{-1, ERROR, 107}, {6, SHIFT, 113}, },
   * {{-1, REDUCE, 47}, },
   * {{-1, REDUCE, 39}, },
   * {{-1, REDUCE, 43}, },
   * {{-1, REDUCE, 40}, },
   * {{-1, REDUCE, 44}, },
   * {{-1, REDUCE, 14}, },
   * };
   */
  private static int[][][] gotoTable;

  /*
   * {
   * {{-1, 2}, },
   * {{-1, 3}, {4, 6}, },
   * {{-1, 4}, {7, 12}, {13, 12}, },
   * {{-1, 13}, },
   * {{-1, 14}, {13, 20}, },
   * {{-1, 24}, {32, 47}, {50, 65}, {78, 96}, {80, 98}, },
   * {{-1, 31}, {44, 58}, },
   * {{-1, 32}, {23, 33}, {27, 40}, {45, 59}, {64, 80}, },
   * {{-1, 38}, {53, 71}, {54, 73}, },
   * {{-1, 69}, {94, 105}, },
   * {{-1, 42}, {57, 76}, },
   * {{-1, 88}, {68, 91}, },
   * {{-1, 70}, },
   * {{-1, 89}, {68, 92}, },
   * {{-1, 90}, {100, 108}, },
   * {{-1, 39}, },
   * {{-1, -1}, },
   * {{-1, 43}, },
   * };
   */
  private static String[] errorMessages;

  /*
   * {
   * "expecting: 'package'",
   * "expecting: identifier",
   * "expecting: EOF",
   * "expecting: 'package', EOF",
   * "expecting: '{'",
   * "expecting: 'package', 'class', '@target', 'interface', 'enum'",
   * "expecting: '='",
   * "expecting: '}', 'package', 'class', '@target', 'interface', 'enum'",
   * "expecting: '{', 'implements-all', 'uses'",
   * "expecting: '{', 'extends'",
   * "expecting: '}', 'package', 'class', '@target', 'interface', 'enum', EOF",
   * "expecting: '}'",
   * "expecting: 'class'",
   * "expecting: '}', identifier",
   * "expecting: ',', '.', '{', 'uses', 'as'",
   * "expecting: ',', '{', 'uses', 'as'",
   * "expecting: '{', 'uses'",
   * "expecting: 'as'",
   * "expecting: '('",
   * "expecting: ';'",
   * "expecting: ',', '}', '='",
   * "expecting: ',', '}'",
   * "expecting: ')', 'in', 'inout'",
   * "expecting: decimal constant",
   * "expecting: '{', 'uses', 'as'",
   * "expecting: ',', '{'",
   * "expecting: 'int', 'double', 'bool', 'opaque', 'string', identifier",
   * "expecting: ')'",
   * "expecting: ',', ')'",
   * "expecting: 'uses'",
   * "expecting: '.', identifier",
   * "expecting: 'in', 'inout'",
   * "expecting: ',', ')', '[]'",
   * };
   */
  private static int[] errors;
  /*
   * {
   * 0, 1, 2, 2, 3, 4, 2, 5, 1, 6, 1, 1, 7, 7, 7, 8, 1, 9, 4, 10, 7, 11, 1, 1,
   * 4, 12, 13, 1, 1, 7, 14, 15, 16, 17, 11, 1, 7, 18, 11, 19, 4, 20, 11, 21, 1,
   * 1, 11, 4, 1, 7, 8, 22, 7, 13, 13, 23, 19, 1, 15, 24, 7, 11, 25, 11, 1, 4,
   * 19, 26, 26, 27, 28, 11, 7, 11, 21, 7, 11, 7, 29, 7, 16, 11, 1, 1, 1, 1, 1,
   * 30, 1, 1, 1, 1, 1, 19, 31, 7, 4, 11, 4, 7, 1, 32, 32, 32, 32, 27, 7, 11, 1,
   * 28, 28, 28, 28, 7,
   * };
   */

  static {
    try {
      DataInputStream s = new DataInputStream(new BufferedInputStream(
          Parser.class.getResourceAsStream("parser.dat")));

      // read actionTable
      int length = s.readInt();
      Parser.actionTable = new int[length][][];
      for (int i = 0; i < Parser.actionTable.length; i++) {
        length = s.readInt();
        Parser.actionTable[i] = new int[length][3];
        for (int j = 0; j < Parser.actionTable[i].length; j++) {
          for (int k = 0; k < 3; k++) {
            Parser.actionTable[i][j][k] = s.readInt();
          }
        }
      }

      // read gotoTable
      length = s.readInt();
      gotoTable = new int[length][][];
      for (int i = 0; i < gotoTable.length; i++) {
        length = s.readInt();
        gotoTable[i] = new int[length][2];
        for (int j = 0; j < gotoTable[i].length; j++) {
          for (int k = 0; k < 2; k++) {
            gotoTable[i][j][k] = s.readInt();
          }
        }
      }

      // read errorMessages
      length = s.readInt();
      errorMessages = new String[length];
      for (int i = 0; i < errorMessages.length; i++) {
        length = s.readInt();
        StringBuffer buffer = new StringBuffer();

        for (int j = 0; j < length; j++) {
          buffer.append(s.readChar());
        }
        errorMessages[i] = buffer.toString();
      }

      // read errors
      length = s.readInt();
      errors = new int[length];
      for (int i = 0; i < errors.length; i++) {
        errors[i] = s.readInt();
      }

      s.close();
    } catch (Exception e) {
      throw new RuntimeException(
          "The file \"parser.dat\" is either missing or corrupted.");
    }
  }

  public Parser(@SuppressWarnings("hiding") Lexer lexer) {
    this.lexer = lexer;
  }

  private int goTo(int index) {
    int state = state();
    int low = 1;
    int high = gotoTable[index].length - 1;
    int value = gotoTable[index][0][1];

    while (low <= high) {
      int middle = (low + high) / 2;

      if (state < gotoTable[index][middle][0]) {
        high = middle - 1;
      } else if (state > gotoTable[index][middle][0]) {
        low = middle + 1;
      } else {
        value = gotoTable[index][middle][1];
        break;
      }
    }

    return value;
  }

  private int index(Switchable token) {
    converter.index = -1;
    token.apply(converter);
    return converter.index;
  }

  @SuppressWarnings("unchecked")
  ArrayList new0() /* reduce ADeclaration */
  {
    @SuppressWarnings("hiding")
    ArrayList nodeList = new ArrayList();

    @SuppressWarnings("unused")
    ArrayList nodeArrayList1 = pop();
    PDeclaration pdeclarationNode1;
    {
      // Block
      LinkedList listNode3 = new LinkedList();
      {
        // Block
        LinkedList listNode2 = new LinkedList();
        listNode2 = (LinkedList)nodeArrayList1.get(0);
        if (listNode2 != null) {
          listNode3.addAll(listNode2);
        }
      }

      pdeclarationNode1 = new ADeclaration(listNode3);
    }
    nodeList.add(pdeclarationNode1);
    return nodeList;
  }

  @SuppressWarnings("unchecked")
  ArrayList new1() /* reduce ASinglePackageList */
  {
    @SuppressWarnings("hiding")
    ArrayList nodeList = new ArrayList();

    @SuppressWarnings("unused")
    ArrayList nodeArrayList1 = pop();
    LinkedList listNode2 = new LinkedList();
    {
      // Block
      PPackage ppackageNode1;
      ppackageNode1 = (PPackage)nodeArrayList1.get(0);
      if (ppackageNode1 != null) {
        listNode2.add(ppackageNode1);
      }
    }
    nodeList.add(listNode2);
    return nodeList;
  }

  @SuppressWarnings("unchecked")
  ArrayList new10() /*
                     * reduce
                     * AClassWithSupertypeAndUsesWithoutTargetPackageElement
                     */
  {
    @SuppressWarnings("hiding")
    ArrayList nodeList = new ArrayList();

    @SuppressWarnings("unused")
    ArrayList nodeArrayList7 = pop();
    @SuppressWarnings("unused")
    ArrayList nodeArrayList6 = pop();
    @SuppressWarnings("unused")
    ArrayList nodeArrayList5 = pop();
    @SuppressWarnings("unused")
    ArrayList nodeArrayList4 = pop();
    @SuppressWarnings("unused")
    ArrayList nodeArrayList3 = pop();
    @SuppressWarnings("unused")
    ArrayList nodeArrayList2 = pop();
    @SuppressWarnings("unused")
    ArrayList nodeArrayList1 = pop();
    PPackageElement ppackageelementNode1;
    {
      // Block
      @SuppressWarnings("unused")
      Object nullNode2 = null;
      TIdentifier tidentifierNode3;
      LinkedList listNode5 = new LinkedList();
      LinkedList listNode7 = new LinkedList();
      tidentifierNode3 = (TIdentifier)nodeArrayList2.get(0);
      {
        // Block
        LinkedList listNode4 = new LinkedList();
        listNode4 = (LinkedList)nodeArrayList4.get(0);
        if (listNode4 != null) {
          listNode5.addAll(listNode4);
        }
      }
      {
        // Block
        LinkedList listNode6 = new LinkedList();
        listNode6 = (LinkedList)nodeArrayList5.get(0);
        if (listNode6 != null) {
          listNode7.addAll(listNode6);
        }
      }

      ppackageelementNode1 = new AClassPackageElement(null, tidentifierNode3,
          listNode5, listNode7);
    }
    nodeList.add(ppackageelementNode1);
    return nodeList;
  }

  @SuppressWarnings("unchecked")
  ArrayList new11() /* reduce AClassWithTargetPackageElement */
  {
    @SuppressWarnings("hiding")
    ArrayList nodeList = new ArrayList();

    @SuppressWarnings("unused")
    ArrayList nodeArrayList7 = pop();
    @SuppressWarnings("unused")
    ArrayList nodeArrayList6 = pop();
    @SuppressWarnings("unused")
    ArrayList nodeArrayList5 = pop();
    @SuppressWarnings("unused")
    ArrayList nodeArrayList4 = pop();
    @SuppressWarnings("unused")
    ArrayList nodeArrayList3 = pop();
    @SuppressWarnings("unused")
    ArrayList nodeArrayList2 = pop();
    @SuppressWarnings("unused")
    ArrayList nodeArrayList1 = pop();
    PPackageElement ppackageelementNode1;
    {
      // Block
      TIdentifier tidentifierNode2;
      TIdentifier tidentifierNode3;
      LinkedList listNode4 = new LinkedList();
      LinkedList listNode5 = new LinkedList();
      tidentifierNode2 = (TIdentifier)nodeArrayList3.get(0);
      tidentifierNode3 = (TIdentifier)nodeArrayList5.get(0);
      {
        // Block
      }
      {
        // Block
      }

      ppackageelementNode1 = new AClassPackageElement(tidentifierNode2,
          tidentifierNode3, listNode4, listNode5);
    }
    nodeList.add(ppackageelementNode1);
    return nodeList;
  }

  @SuppressWarnings("unchecked")
  ArrayList new12() /* reduce AClassWithSupertypeWithTargetPackageElement */
  {
    @SuppressWarnings("hiding")
    ArrayList nodeList = new ArrayList();

    @SuppressWarnings("unused")
    ArrayList nodeArrayList9 = pop();
    @SuppressWarnings("unused")
    ArrayList nodeArrayList8 = pop();
    @SuppressWarnings("unused")
    ArrayList nodeArrayList7 = pop();
    @SuppressWarnings("unused")
    ArrayList nodeArrayList6 = pop();
    @SuppressWarnings("unused")
    ArrayList nodeArrayList5 = pop();
    @SuppressWarnings("unused")
    ArrayList nodeArrayList4 = pop();
    @SuppressWarnings("unused")
    ArrayList nodeArrayList3 = pop();
    @SuppressWarnings("unused")
    ArrayList nodeArrayList2 = pop();
    @SuppressWarnings("unused")
    ArrayList nodeArrayList1 = pop();
    PPackageElement ppackageelementNode1;
    {
      // Block
      TIdentifier tidentifierNode2;
      TIdentifier tidentifierNode3;
      LinkedList listNode5 = new LinkedList();
      LinkedList listNode6 = new LinkedList();
      tidentifierNode2 = (TIdentifier)nodeArrayList3.get(0);
      tidentifierNode3 = (TIdentifier)nodeArrayList5.get(0);
      {
        // Block
        LinkedList listNode4 = new LinkedList();
        listNode4 = (LinkedList)nodeArrayList7.get(0);
        if (listNode4 != null) {
          listNode5.addAll(listNode4);
        }
      }
      {
        // Block
      }

      ppackageelementNode1 = new AClassPackageElement(tidentifierNode2,
          tidentifierNode3, listNode5, listNode6);
    }
    nodeList.add(ppackageelementNode1);
    return nodeList;
  }

  @SuppressWarnings("unchecked")
  ArrayList new13() /* reduce AClassWithUsesWithTargetPackageElement */
  {
    @SuppressWarnings("hiding")
    ArrayList nodeList = new ArrayList();

    @SuppressWarnings("unused")
    ArrayList nodeArrayList8 = pop();
    @SuppressWarnings("unused")
    ArrayList nodeArrayList7 = pop();
    @SuppressWarnings("unused")
    ArrayList nodeArrayList6 = pop();
    @SuppressWarnings("unused")
    ArrayList nodeArrayList5 = pop();
    @SuppressWarnings("unused")
    ArrayList nodeArrayList4 = pop();
    @SuppressWarnings("unused")
    ArrayList nodeArrayList3 = pop();
    @SuppressWarnings("unused")
    ArrayList nodeArrayList2 = pop();
    @SuppressWarnings("unused")
    ArrayList nodeArrayList1 = pop();
    PPackageElement ppackageelementNode1;
    {
      // Block
      TIdentifier tidentifierNode2;
      TIdentifier tidentifierNode3;
      LinkedList listNode4 = new LinkedList();
      LinkedList listNode6 = new LinkedList();
      tidentifierNode2 = (TIdentifier)nodeArrayList3.get(0);
      tidentifierNode3 = (TIdentifier)nodeArrayList5.get(0);
      {
        // Block
      }
      {
        // Block
        LinkedList listNode5 = new LinkedList();
        listNode5 = (LinkedList)nodeArrayList6.get(0);
        if (listNode5 != null) {
          listNode6.addAll(listNode5);
        }
      }

      ppackageelementNode1 = new AClassPackageElement(tidentifierNode2,
          tidentifierNode3, listNode4, listNode6);
    }
    nodeList.add(ppackageelementNode1);
    return nodeList;
  }

  @SuppressWarnings("unchecked")
  ArrayList new14() /* reduce AClassWithSupertypeAndUsesWithTargetPackageElement */
  {
    @SuppressWarnings("hiding")
    ArrayList nodeList = new ArrayList();

    @SuppressWarnings("unused")
    ArrayList nodeArrayList10 = pop();
    @SuppressWarnings("unused")
    ArrayList nodeArrayList9 = pop();
    @SuppressWarnings("unused")
    ArrayList nodeArrayList8 = pop();
    @SuppressWarnings("unused")
    ArrayList nodeArrayList7 = pop();
    @SuppressWarnings("unused")
    ArrayList nodeArrayList6 = pop();
    @SuppressWarnings("unused")
    ArrayList nodeArrayList5 = pop();
    @SuppressWarnings("unused")
    ArrayList nodeArrayList4 = pop();
    @SuppressWarnings("unused")
    ArrayList nodeArrayList3 = pop();
    @SuppressWarnings("unused")
    ArrayList nodeArrayList2 = pop();
    @SuppressWarnings("unused")
    ArrayList nodeArrayList1 = pop();
    PPackageElement ppackageelementNode1;
    {
      // Block
      TIdentifier tidentifierNode2;
      TIdentifier tidentifierNode3;
      LinkedList listNode5 = new LinkedList();
      LinkedList listNode7 = new LinkedList();
      tidentifierNode2 = (TIdentifier)nodeArrayList3.get(0);
      tidentifierNode3 = (TIdentifier)nodeArrayList5.get(0);
      {
        // Block
        LinkedList listNode4 = new LinkedList();
        listNode4 = (LinkedList)nodeArrayList7.get(0);
        if (listNode4 != null) {
          listNode5.addAll(listNode4);
        }
      }
      {
        // Block
        LinkedList listNode6 = new LinkedList();
        listNode6 = (LinkedList)nodeArrayList8.get(0);
        if (listNode6 != null) {
          listNode7.addAll(listNode6);
        }
      }

      ppackageelementNode1 = new AClassPackageElement(tidentifierNode2,
          tidentifierNode3, listNode5, listNode7);
    }
    nodeList.add(ppackageelementNode1);
    return nodeList;
  }

  @SuppressWarnings("unchecked")
  ArrayList new15() /* reduce AAinterfacepackageelement1PackageElement */
  {
    @SuppressWarnings("hiding")
    ArrayList nodeList = new ArrayList();

    @SuppressWarnings("unused")
    ArrayList nodeArrayList4 = pop();
    @SuppressWarnings("unused")
    ArrayList nodeArrayList3 = pop();
    @SuppressWarnings("unused")
    ArrayList nodeArrayList2 = pop();
    @SuppressWarnings("unused")
    ArrayList nodeArrayList1 = pop();
    PPackageElement ppackageelementNode1;
    {
      // Block
      TIdentifier tidentifierNode2;
      LinkedList listNode3 = new LinkedList();
      LinkedList listNode4 = new LinkedList();
      tidentifierNode2 = (TIdentifier)nodeArrayList2.get(0);
      {
        // Block
      }
      {
        // Block
      }

      ppackageelementNode1 = new AInterfacePackageElement(tidentifierNode2,
          listNode3, listNode4);
    }
    nodeList.add(ppackageelementNode1);
    return nodeList;
  }

  @SuppressWarnings("unchecked")
  ArrayList new16() /* reduce AAinterfacepackageelement2PackageElement */
  {
    @SuppressWarnings("hiding")
    ArrayList nodeList = new ArrayList();

    @SuppressWarnings("unused")
    ArrayList nodeArrayList5 = pop();
    @SuppressWarnings("unused")
    ArrayList nodeArrayList4 = pop();
    @SuppressWarnings("unused")
    ArrayList nodeArrayList3 = pop();
    @SuppressWarnings("unused")
    ArrayList nodeArrayList2 = pop();
    @SuppressWarnings("unused")
    ArrayList nodeArrayList1 = pop();
    PPackageElement ppackageelementNode1;
    {
      // Block
      TIdentifier tidentifierNode2;
      LinkedList listNode3 = new LinkedList();
      LinkedList listNode5 = new LinkedList();
      tidentifierNode2 = (TIdentifier)nodeArrayList2.get(0);
      {
        // Block
      }
      {
        // Block
        LinkedList listNode4 = new LinkedList();
        listNode4 = (LinkedList)nodeArrayList4.get(0);
        if (listNode4 != null) {
          listNode5.addAll(listNode4);
        }
      }

      ppackageelementNode1 = new AInterfacePackageElement(tidentifierNode2,
          listNode3, listNode5);
    }
    nodeList.add(ppackageelementNode1);
    return nodeList;
  }

  @SuppressWarnings("unchecked")
  ArrayList new17() /*
                     * reduce
                     * AAinterfacewithsupertypepackageelement1PackageElement
                     */
  {
    @SuppressWarnings("hiding")
    ArrayList nodeList = new ArrayList();

    @SuppressWarnings("unused")
    ArrayList nodeArrayList6 = pop();
    @SuppressWarnings("unused")
    ArrayList nodeArrayList5 = pop();
    @SuppressWarnings("unused")
    ArrayList nodeArrayList4 = pop();
    @SuppressWarnings("unused")
    ArrayList nodeArrayList3 = pop();
    @SuppressWarnings("unused")
    ArrayList nodeArrayList2 = pop();
    @SuppressWarnings("unused")
    ArrayList nodeArrayList1 = pop();
    PPackageElement ppackageelementNode1;
    {
      // Block
      TIdentifier tidentifierNode2;
      LinkedList listNode4 = new LinkedList();
      LinkedList listNode5 = new LinkedList();
      tidentifierNode2 = (TIdentifier)nodeArrayList2.get(0);
      {
        // Block
        LinkedList listNode3 = new LinkedList();
        listNode3 = (LinkedList)nodeArrayList4.get(0);
        if (listNode3 != null) {
          listNode4.addAll(listNode3);
        }
      }
      {
        // Block
      }

      ppackageelementNode1 = new AInterfacePackageElement(tidentifierNode2,
          listNode4, listNode5);
    }
    nodeList.add(ppackageelementNode1);
    return nodeList;
  }

  @SuppressWarnings("unchecked")
  ArrayList new18() /*
                     * reduce
                     * AAinterfacewithsupertypepackageelement2PackageElement
                     */
  {
    @SuppressWarnings("hiding")
    ArrayList nodeList = new ArrayList();

    @SuppressWarnings("unused")
    ArrayList nodeArrayList7 = pop();
    @SuppressWarnings("unused")
    ArrayList nodeArrayList6 = pop();
    @SuppressWarnings("unused")
    ArrayList nodeArrayList5 = pop();
    @SuppressWarnings("unused")
    ArrayList nodeArrayList4 = pop();
    @SuppressWarnings("unused")
    ArrayList nodeArrayList3 = pop();
    @SuppressWarnings("unused")
    ArrayList nodeArrayList2 = pop();
    @SuppressWarnings("unused")
    ArrayList nodeArrayList1 = pop();
    PPackageElement ppackageelementNode1;
    {
      // Block
      TIdentifier tidentifierNode2;
      LinkedList listNode4 = new LinkedList();
      LinkedList listNode6 = new LinkedList();
      tidentifierNode2 = (TIdentifier)nodeArrayList2.get(0);
      {
        // Block
        LinkedList listNode3 = new LinkedList();
        listNode3 = (LinkedList)nodeArrayList4.get(0);
        if (listNode3 != null) {
          listNode4.addAll(listNode3);
        }
      }
      {
        // Block
        LinkedList listNode5 = new LinkedList();
        listNode5 = (LinkedList)nodeArrayList6.get(0);
        if (listNode5 != null) {
          listNode6.addAll(listNode5);
        }
      }

      ppackageelementNode1 = new AInterfacePackageElement(tidentifierNode2,
          listNode4, listNode6);
    }
    nodeList.add(ppackageelementNode1);
    return nodeList;
  }

  @SuppressWarnings("unchecked")
  ArrayList new19() /* reduce AEnumDeclarationPackageElement */
  {
    @SuppressWarnings("hiding")
    ArrayList nodeList = new ArrayList();

    @SuppressWarnings("unused")
    ArrayList nodeArrayList6 = pop();
    @SuppressWarnings("unused")
    ArrayList nodeArrayList5 = pop();
    @SuppressWarnings("unused")
    ArrayList nodeArrayList4 = pop();
    @SuppressWarnings("unused")
    ArrayList nodeArrayList3 = pop();
    @SuppressWarnings("unused")
    ArrayList nodeArrayList2 = pop();
    @SuppressWarnings("unused")
    ArrayList nodeArrayList1 = pop();
    PPackageElement ppackageelementNode1;
    {
      // Block
      TIdentifier tidentifierNode2;
      LinkedList listNode4 = new LinkedList();
      tidentifierNode2 = (TIdentifier)nodeArrayList2.get(0);
      {
        // Block
        LinkedList listNode3 = new LinkedList();
        listNode3 = (LinkedList)nodeArrayList4.get(0);
        if (listNode3 != null) {
          listNode4.addAll(listNode3);
        }
      }

      ppackageelementNode1 = new AEnumDeclarationPackageElement(
          tidentifierNode2, listNode4);
    }
    nodeList.add(ppackageelementNode1);
    return nodeList;
  }

  @SuppressWarnings("unchecked")
  ArrayList new2() /* reduce AListPackageList */
  {
    @SuppressWarnings("hiding")
    ArrayList nodeList = new ArrayList();

    @SuppressWarnings("unused")
    ArrayList nodeArrayList2 = pop();
    @SuppressWarnings("unused")
    ArrayList nodeArrayList1 = pop();
    LinkedList listNode3 = new LinkedList();
    {
      // Block
      LinkedList listNode1 = new LinkedList();
      PPackage ppackageNode2;
      listNode1 = (LinkedList)nodeArrayList2.get(0);
      ppackageNode2 = (PPackage)nodeArrayList1.get(0);
      if (listNode1 != null) {
        listNode3.addAll(listNode1);
      }
      if (ppackageNode2 != null) {
        listNode3.add(ppackageNode2);
      }
    }
    nodeList.add(listNode3);
    return nodeList;
  }

  @SuppressWarnings("unchecked")
  ArrayList new20() /* reduce ASingleUsesList */
  {
    @SuppressWarnings("hiding")
    ArrayList nodeList = new ArrayList();

    @SuppressWarnings("unused")
    ArrayList nodeArrayList4 = pop();
    @SuppressWarnings("unused")
    ArrayList nodeArrayList3 = pop();
    @SuppressWarnings("unused")
    ArrayList nodeArrayList2 = pop();
    @SuppressWarnings("unused")
    ArrayList nodeArrayList1 = pop();
    LinkedList listNode5 = new LinkedList();
    {
      // Block
      PUses pusesNode1;
      {
        // Block
        LinkedList listNode3 = new LinkedList();
        TIdentifier tidentifierNode4;
        {
          // Block
          LinkedList listNode2 = new LinkedList();
          listNode2 = (LinkedList)nodeArrayList2.get(0);
          if (listNode2 != null) {
            listNode3.addAll(listNode2);
          }
        }
        tidentifierNode4 = (TIdentifier)nodeArrayList4.get(0);

        pusesNode1 = new AUses(listNode3, tidentifierNode4);
      }
      if (pusesNode1 != null) {
        listNode5.add(pusesNode1);
      }
    }
    nodeList.add(listNode5);
    return nodeList;
  }

  @SuppressWarnings("unchecked")
  ArrayList new21() /* reduce AListUsesList */
  {
    @SuppressWarnings("hiding")
    ArrayList nodeList = new ArrayList();

    @SuppressWarnings("unused")
    ArrayList nodeArrayList6 = pop();
    @SuppressWarnings("unused")
    ArrayList nodeArrayList5 = pop();
    @SuppressWarnings("unused")
    ArrayList nodeArrayList4 = pop();
    @SuppressWarnings("unused")
    ArrayList nodeArrayList3 = pop();
    @SuppressWarnings("unused")
    ArrayList nodeArrayList2 = pop();
    @SuppressWarnings("unused")
    ArrayList nodeArrayList1 = pop();
    LinkedList listNode6 = new LinkedList();
    {
      // Block
      PUses pusesNode1;
      LinkedList listNode5 = new LinkedList();
      {
        // Block
        LinkedList listNode3 = new LinkedList();
        TIdentifier tidentifierNode4;
        {
          // Block
          LinkedList listNode2 = new LinkedList();
          listNode2 = (LinkedList)nodeArrayList2.get(0);
          if (listNode2 != null) {
            listNode3.addAll(listNode2);
          }
        }
        tidentifierNode4 = (TIdentifier)nodeArrayList4.get(0);

        pusesNode1 = new AUses(listNode3, tidentifierNode4);
      }
      listNode5 = (LinkedList)nodeArrayList6.get(0);
      if (pusesNode1 != null) {
        listNode6.add(pusesNode1);
      }
      if (listNode5 != null) {
        listNode6.addAll(listNode5);
      }
    }
    nodeList.add(listNode6);
    return nodeList;
  }

  @SuppressWarnings("unchecked")
  ArrayList new22() /* reduce ALocalTypeIdentifier */
  {
    @SuppressWarnings("hiding")
    ArrayList nodeList = new ArrayList();

    @SuppressWarnings("unused")
    ArrayList nodeArrayList1 = pop();
    LinkedList listNode2 = new LinkedList();
    {
      // Block
      TIdentifier tidentifierNode1;
      tidentifierNode1 = (TIdentifier)nodeArrayList1.get(0);
      if (tidentifierNode1 != null) {
        listNode2.add(tidentifierNode1);
      }
    }
    nodeList.add(listNode2);
    return nodeList;
  }

  @SuppressWarnings("unchecked")
  ArrayList new23() /* reduce AGlobalTypeIdentifier */
  {
    @SuppressWarnings("hiding")
    ArrayList nodeList = new ArrayList();

    @SuppressWarnings("unused")
    ArrayList nodeArrayList3 = pop();
    @SuppressWarnings("unused")
    ArrayList nodeArrayList2 = pop();
    @SuppressWarnings("unused")
    ArrayList nodeArrayList1 = pop();
    LinkedList listNode3 = new LinkedList();
    {
      // Block
      TIdentifier tidentifierNode1;
      LinkedList listNode2 = new LinkedList();
      tidentifierNode1 = (TIdentifier)nodeArrayList1.get(0);
      listNode2 = (LinkedList)nodeArrayList3.get(0);
      if (tidentifierNode1 != null) {
        listNode3.add(tidentifierNode1);
      }
      if (listNode2 != null) {
        listNode3.addAll(listNode2);
      }
    }
    nodeList.add(listNode3);
    return nodeList;
  }

  @SuppressWarnings("unchecked")
  ArrayList new24() /* reduce ASingleTypeList */
  {
    @SuppressWarnings("hiding")
    ArrayList nodeList = new ArrayList();

    @SuppressWarnings("unused")
    ArrayList nodeArrayList1 = pop();
    LinkedList listNode4 = new LinkedList();
    {
      // Block
      PUserDefinedType puserdefinedtypeNode1;
      {
        // Block
        LinkedList listNode3 = new LinkedList();
        {
          // Block
          LinkedList listNode2 = new LinkedList();
          listNode2 = (LinkedList)nodeArrayList1.get(0);
          if (listNode2 != null) {
            listNode3.addAll(listNode2);
          }
        }

        puserdefinedtypeNode1 = new AUserDefinedType(listNode3);
      }
      if (puserdefinedtypeNode1 != null) {
        listNode4.add(puserdefinedtypeNode1);
      }
    }
    nodeList.add(listNode4);
    return nodeList;
  }

  @SuppressWarnings("unchecked")
  ArrayList new25() /* reduce AListTypeList */
  {
    @SuppressWarnings("hiding")
    ArrayList nodeList = new ArrayList();

    @SuppressWarnings("unused")
    ArrayList nodeArrayList3 = pop();
    @SuppressWarnings("unused")
    ArrayList nodeArrayList2 = pop();
    @SuppressWarnings("unused")
    ArrayList nodeArrayList1 = pop();
    LinkedList listNode5 = new LinkedList();
    {
      // Block
      PUserDefinedType puserdefinedtypeNode1;
      LinkedList listNode4 = new LinkedList();
      {
        // Block
        LinkedList listNode3 = new LinkedList();
        {
          // Block
          LinkedList listNode2 = new LinkedList();
          listNode2 = (LinkedList)nodeArrayList1.get(0);
          if (listNode2 != null) {
            listNode3.addAll(listNode2);
          }
        }

        puserdefinedtypeNode1 = new AUserDefinedType(listNode3);
      }
      listNode4 = (LinkedList)nodeArrayList3.get(0);
      if (puserdefinedtypeNode1 != null) {
        listNode5.add(puserdefinedtypeNode1);
      }
      if (listNode4 != null) {
        listNode5.addAll(listNode4);
      }
    }
    nodeList.add(listNode5);
    return nodeList;
  }

  @SuppressWarnings("unchecked")
  ArrayList new26() /* reduce ASingleOperationList */
  {
    @SuppressWarnings("hiding")
    ArrayList nodeList = new ArrayList();

    @SuppressWarnings("unused")
    ArrayList nodeArrayList2 = pop();
    @SuppressWarnings("unused")
    ArrayList nodeArrayList1 = pop();
    LinkedList listNode2 = new LinkedList();
    {
      // Block
      POperation poperationNode1;
      poperationNode1 = (POperation)nodeArrayList1.get(0);
      if (poperationNode1 != null) {
        listNode2.add(poperationNode1);
      }
    }
    nodeList.add(listNode2);
    return nodeList;
  }

  @SuppressWarnings("unchecked")
  ArrayList new27() /* reduce AListOperationList */
  {
    @SuppressWarnings("hiding")
    ArrayList nodeList = new ArrayList();

    @SuppressWarnings("unused")
    ArrayList nodeArrayList3 = pop();
    @SuppressWarnings("unused")
    ArrayList nodeArrayList2 = pop();
    @SuppressWarnings("unused")
    ArrayList nodeArrayList1 = pop();
    LinkedList listNode3 = new LinkedList();
    {
      // Block
      POperation poperationNode1;
      LinkedList listNode2 = new LinkedList();
      poperationNode1 = (POperation)nodeArrayList1.get(0);
      listNode2 = (LinkedList)nodeArrayList3.get(0);
      if (poperationNode1 != null) {
        listNode3.add(poperationNode1);
      }
      if (listNode2 != null) {
        listNode3.addAll(listNode2);
      }
    }
    nodeList.add(listNode3);
    return nodeList;
  }

  @SuppressWarnings("unchecked")
  ArrayList new28() /* reduce ASingleParameterList */
  {
    @SuppressWarnings("hiding")
    ArrayList nodeList = new ArrayList();

    @SuppressWarnings("unused")
    ArrayList nodeArrayList1 = pop();
    LinkedList listNode2 = new LinkedList();
    {
      // Block
      PParameter pparameterNode1;
      pparameterNode1 = (PParameter)nodeArrayList1.get(0);
      if (pparameterNode1 != null) {
        listNode2.add(pparameterNode1);
      }
    }
    nodeList.add(listNode2);
    return nodeList;
  }

  @SuppressWarnings("unchecked")
  ArrayList new29() /* reduce AListParameterList */
  {
    @SuppressWarnings("hiding")
    ArrayList nodeList = new ArrayList();

    @SuppressWarnings("unused")
    ArrayList nodeArrayList3 = pop();
    @SuppressWarnings("unused")
    ArrayList nodeArrayList2 = pop();
    @SuppressWarnings("unused")
    ArrayList nodeArrayList1 = pop();
    LinkedList listNode3 = new LinkedList();
    {
      // Block
      PParameter pparameterNode1;
      LinkedList listNode2 = new LinkedList();
      pparameterNode1 = (PParameter)nodeArrayList1.get(0);
      listNode2 = (LinkedList)nodeArrayList3.get(0);
      if (pparameterNode1 != null) {
        listNode3.add(pparameterNode1);
      }
      if (listNode2 != null) {
        listNode3.addAll(listNode2);
      }
    }
    nodeList.add(listNode3);
    return nodeList;
  }

  @SuppressWarnings("unchecked")
  ArrayList new3() /* reduce AUnversionedPackagePackage */
  {
    @SuppressWarnings("hiding")
    ArrayList nodeList = new ArrayList();

    @SuppressWarnings("unused")
    ArrayList nodeArrayList5 = pop();
    @SuppressWarnings("unused")
    ArrayList nodeArrayList4 = pop();
    @SuppressWarnings("unused")
    ArrayList nodeArrayList3 = pop();
    @SuppressWarnings("unused")
    ArrayList nodeArrayList2 = pop();
    @SuppressWarnings("unused")
    ArrayList nodeArrayList1 = pop();
    PPackage ppackageNode1;
    {
      // Block
      TIdentifier tidentifierNode2;
      LinkedList listNode4 = new LinkedList();
      tidentifierNode2 = (TIdentifier)nodeArrayList2.get(0);
      {
        // Block
        LinkedList listNode3 = new LinkedList();
        listNode3 = (LinkedList)nodeArrayList4.get(0);
        if (listNode3 != null) {
          listNode4.addAll(listNode3);
        }
      }

      ppackageNode1 = new APackage(tidentifierNode2, listNode4);
    }
    nodeList.add(ppackageNode1);
    return nodeList;
  }

  @SuppressWarnings("unchecked")
  ArrayList new30() /* reduce ASingleEnumeratorList */
  {
    @SuppressWarnings("hiding")
    ArrayList nodeList = new ArrayList();

    @SuppressWarnings("unused")
    ArrayList nodeArrayList1 = pop();
    LinkedList listNode2 = new LinkedList();
    {
      // Block
      PEnumerator penumeratorNode1;
      penumeratorNode1 = (PEnumerator)nodeArrayList1.get(0);
      if (penumeratorNode1 != null) {
        listNode2.add(penumeratorNode1);
      }
    }
    nodeList.add(listNode2);
    return nodeList;
  }

  @SuppressWarnings("unchecked")
  ArrayList new31() /* reduce AListEnumeratorList */
  {
    @SuppressWarnings("hiding")
    ArrayList nodeList = new ArrayList();

    @SuppressWarnings("unused")
    ArrayList nodeArrayList3 = pop();
    @SuppressWarnings("unused")
    ArrayList nodeArrayList2 = pop();
    @SuppressWarnings("unused")
    ArrayList nodeArrayList1 = pop();
    LinkedList listNode3 = new LinkedList();
    {
      // Block
      PEnumerator penumeratorNode1;
      LinkedList listNode2 = new LinkedList();
      penumeratorNode1 = (PEnumerator)nodeArrayList1.get(0);
      listNode2 = (LinkedList)nodeArrayList3.get(0);
      if (penumeratorNode1 != null) {
        listNode3.add(penumeratorNode1);
      }
      if (listNode2 != null) {
        listNode3.addAll(listNode2);
      }
    }
    nodeList.add(listNode3);
    return nodeList;
  }

  @SuppressWarnings("unchecked")
  ArrayList new32() /* reduce AIntBuiltInType */
  {
    @SuppressWarnings("hiding")
    ArrayList nodeList = new ArrayList();

    @SuppressWarnings("unused")
    ArrayList nodeArrayList1 = pop();
    PBuiltInType pbuiltintypeNode1;
    {
      // Block

      pbuiltintypeNode1 = new AIntBuiltInType();
    }
    nodeList.add(pbuiltintypeNode1);
    return nodeList;
  }

  @SuppressWarnings("unchecked")
  ArrayList new33() /* reduce ADoubleBuiltInType */
  {
    @SuppressWarnings("hiding")
    ArrayList nodeList = new ArrayList();

    @SuppressWarnings("unused")
    ArrayList nodeArrayList1 = pop();
    PBuiltInType pbuiltintypeNode1;
    {
      // Block

      pbuiltintypeNode1 = new ADoubleBuiltInType();
    }
    nodeList.add(pbuiltintypeNode1);
    return nodeList;
  }

  @SuppressWarnings("unchecked")
  ArrayList new34() /* reduce ABoolBuiltInType */
  {
    @SuppressWarnings("hiding")
    ArrayList nodeList = new ArrayList();

    @SuppressWarnings("unused")
    ArrayList nodeArrayList1 = pop();
    PBuiltInType pbuiltintypeNode1;
    {
      // Block

      pbuiltintypeNode1 = new ABoolBuiltInType();
    }
    nodeList.add(pbuiltintypeNode1);
    return nodeList;
  }

  @SuppressWarnings("unchecked")
  ArrayList new35() /* reduce AOpaqueBuiltInType */
  {
    @SuppressWarnings("hiding")
    ArrayList nodeList = new ArrayList();

    @SuppressWarnings("unused")
    ArrayList nodeArrayList1 = pop();
    PBuiltInType pbuiltintypeNode1;
    {
      // Block

      pbuiltintypeNode1 = new AOpaqueBuiltInType();
    }
    nodeList.add(pbuiltintypeNode1);
    return nodeList;
  }

  @SuppressWarnings("unchecked")
  ArrayList new36() /* reduce AStringBuiltInType */
  {
    @SuppressWarnings("hiding")
    ArrayList nodeList = new ArrayList();

    @SuppressWarnings("unused")
    ArrayList nodeArrayList1 = pop();
    PBuiltInType pbuiltintypeNode1;
    {
      // Block

      pbuiltintypeNode1 = new AStringBuiltInType();
    }
    nodeList.add(pbuiltintypeNode1);
    return nodeList;
  }

  @SuppressWarnings("unchecked")
  ArrayList new37() /* reduce AParameterInBuiltInParameter */
  {
    @SuppressWarnings("hiding")
    ArrayList nodeList = new ArrayList();

    @SuppressWarnings("unused")
    ArrayList nodeArrayList3 = pop();
    @SuppressWarnings("unused")
    ArrayList nodeArrayList2 = pop();
    @SuppressWarnings("unused")
    ArrayList nodeArrayList1 = pop();
    PParameter pparameterNode1;
    {
      // Block
      PBuiltInType pbuiltintypeNode2;
      TIdentifier tidentifierNode3;
      pbuiltintypeNode2 = (PBuiltInType)nodeArrayList2.get(0);
      tidentifierNode3 = (TIdentifier)nodeArrayList3.get(0);

      pparameterNode1 = new AParameterInParameter(pbuiltintypeNode2,
          tidentifierNode3);
    }
    nodeList.add(pparameterNode1);
    return nodeList;
  }

  @SuppressWarnings("unchecked")
  ArrayList new38() /* reduce AParameterInoutBuiltInParameter */
  {
    @SuppressWarnings("hiding")
    ArrayList nodeList = new ArrayList();

    @SuppressWarnings("unused")
    ArrayList nodeArrayList3 = pop();
    @SuppressWarnings("unused")
    ArrayList nodeArrayList2 = pop();
    @SuppressWarnings("unused")
    ArrayList nodeArrayList1 = pop();
    PParameter pparameterNode1;
    {
      // Block
      PBuiltInType pbuiltintypeNode2;
      TIdentifier tidentifierNode3;
      pbuiltintypeNode2 = (PBuiltInType)nodeArrayList2.get(0);
      tidentifierNode3 = (TIdentifier)nodeArrayList3.get(0);

      pparameterNode1 = new AParameterOutParameter(pbuiltintypeNode2,
          tidentifierNode3);
    }
    nodeList.add(pparameterNode1);
    return nodeList;
  }

  @SuppressWarnings("unchecked")
  ArrayList new39() /* reduce AParameterArrayInBuiltInParameter */
  {
    @SuppressWarnings("hiding")
    ArrayList nodeList = new ArrayList();

    @SuppressWarnings("unused")
    ArrayList nodeArrayList4 = pop();
    @SuppressWarnings("unused")
    ArrayList nodeArrayList3 = pop();
    @SuppressWarnings("unused")
    ArrayList nodeArrayList2 = pop();
    @SuppressWarnings("unused")
    ArrayList nodeArrayList1 = pop();
    PParameter pparameterNode1;
    {
      // Block
      PBuiltInType pbuiltintypeNode2;
      TIdentifier tidentifierNode3;
      pbuiltintypeNode2 = (PBuiltInType)nodeArrayList2.get(0);
      tidentifierNode3 = (TIdentifier)nodeArrayList3.get(0);

      pparameterNode1 = new AParameterArrayInParameter(pbuiltintypeNode2,
          tidentifierNode3);
    }
    nodeList.add(pparameterNode1);
    return nodeList;
  }

  @SuppressWarnings("unchecked")
  ArrayList new4() /* reduce ASinglePackageElementList */
  {
    @SuppressWarnings("hiding")
    ArrayList nodeList = new ArrayList();

    @SuppressWarnings("unused")
    ArrayList nodeArrayList1 = pop();
    LinkedList listNode2 = new LinkedList();
    {
      // Block
      PPackageElement ppackageelementNode1;
      ppackageelementNode1 = (PPackageElement)nodeArrayList1.get(0);
      if (ppackageelementNode1 != null) {
        listNode2.add(ppackageelementNode1);
      }
    }
    nodeList.add(listNode2);
    return nodeList;
  }

  @SuppressWarnings("unchecked")
  ArrayList new40() /* reduce AParameterArrayInoutBuiltInParameter */
  {
    @SuppressWarnings("hiding")
    ArrayList nodeList = new ArrayList();

    @SuppressWarnings("unused")
    ArrayList nodeArrayList4 = pop();
    @SuppressWarnings("unused")
    ArrayList nodeArrayList3 = pop();
    @SuppressWarnings("unused")
    ArrayList nodeArrayList2 = pop();
    @SuppressWarnings("unused")
    ArrayList nodeArrayList1 = pop();
    PParameter pparameterNode1;
    {
      // Block
      PBuiltInType pbuiltintypeNode2;
      TIdentifier tidentifierNode3;
      pbuiltintypeNode2 = (PBuiltInType)nodeArrayList2.get(0);
      tidentifierNode3 = (TIdentifier)nodeArrayList3.get(0);

      pparameterNode1 = new AParameterArrayOutParameter(pbuiltintypeNode2,
          tidentifierNode3);
    }
    nodeList.add(pparameterNode1);
    return nodeList;
  }

  @SuppressWarnings("unchecked")
  ArrayList new41() /* reduce AParameterInEnumParameter */
  {
    @SuppressWarnings("hiding")
    ArrayList nodeList = new ArrayList();

    @SuppressWarnings("unused")
    ArrayList nodeArrayList3 = pop();
    @SuppressWarnings("unused")
    ArrayList nodeArrayList2 = pop();
    @SuppressWarnings("unused")
    ArrayList nodeArrayList1 = pop();
    PParameter pparameterNode1;
    {
      // Block
      PUserDefinedType puserdefinedtypeNode2;
      TIdentifier tidentifierNode3;
      puserdefinedtypeNode2 = (PUserDefinedType)nodeArrayList2.get(0);
      tidentifierNode3 = (TIdentifier)nodeArrayList3.get(0);

      pparameterNode1 = new AParameterInEnumParameter(puserdefinedtypeNode2,
          tidentifierNode3);
    }
    nodeList.add(pparameterNode1);
    return nodeList;
  }

  @SuppressWarnings("unchecked")
  ArrayList new42() /* reduce AParameterInoutEnumParameter */
  {
    @SuppressWarnings("hiding")
    ArrayList nodeList = new ArrayList();

    @SuppressWarnings("unused")
    ArrayList nodeArrayList3 = pop();
    @SuppressWarnings("unused")
    ArrayList nodeArrayList2 = pop();
    @SuppressWarnings("unused")
    ArrayList nodeArrayList1 = pop();
    PParameter pparameterNode1;
    {
      // Block
      PUserDefinedType puserdefinedtypeNode2;
      TIdentifier tidentifierNode3;
      puserdefinedtypeNode2 = (PUserDefinedType)nodeArrayList2.get(0);
      tidentifierNode3 = (TIdentifier)nodeArrayList3.get(0);

      pparameterNode1 = new AParameterOutEnumParameter(puserdefinedtypeNode2,
          tidentifierNode3);
    }
    nodeList.add(pparameterNode1);
    return nodeList;
  }

  @SuppressWarnings("unchecked")
  ArrayList new43() /* reduce AParameterArrayInEnumParameter */
  {
    @SuppressWarnings("hiding")
    ArrayList nodeList = new ArrayList();

    @SuppressWarnings("unused")
    ArrayList nodeArrayList4 = pop();
    @SuppressWarnings("unused")
    ArrayList nodeArrayList3 = pop();
    @SuppressWarnings("unused")
    ArrayList nodeArrayList2 = pop();
    @SuppressWarnings("unused")
    ArrayList nodeArrayList1 = pop();
    PParameter pparameterNode1;
    {
      // Block
      PUserDefinedType puserdefinedtypeNode2;
      TIdentifier tidentifierNode3;
      puserdefinedtypeNode2 = (PUserDefinedType)nodeArrayList2.get(0);
      tidentifierNode3 = (TIdentifier)nodeArrayList3.get(0);

      pparameterNode1 = new AParameterArrayInEnumParameter(
          puserdefinedtypeNode2, tidentifierNode3);
    }
    nodeList.add(pparameterNode1);
    return nodeList;
  }

  @SuppressWarnings("unchecked")
  ArrayList new44() /* reduce AParameterArrayInoutEnumParameter */
  {
    @SuppressWarnings("hiding")
    ArrayList nodeList = new ArrayList();

    @SuppressWarnings("unused")
    ArrayList nodeArrayList4 = pop();
    @SuppressWarnings("unused")
    ArrayList nodeArrayList3 = pop();
    @SuppressWarnings("unused")
    ArrayList nodeArrayList2 = pop();
    @SuppressWarnings("unused")
    ArrayList nodeArrayList1 = pop();
    PParameter pparameterNode1;
    {
      // Block
      PUserDefinedType puserdefinedtypeNode2;
      TIdentifier tidentifierNode3;
      puserdefinedtypeNode2 = (PUserDefinedType)nodeArrayList2.get(0);
      tidentifierNode3 = (TIdentifier)nodeArrayList3.get(0);

      pparameterNode1 = new AParameterArrayOutEnumParameter(
          puserdefinedtypeNode2, tidentifierNode3);
    }
    nodeList.add(pparameterNode1);
    return nodeList;
  }

  @SuppressWarnings("unchecked")
  ArrayList new45() /* reduce ASingleEnumType */
  {
    @SuppressWarnings("hiding")
    ArrayList nodeList = new ArrayList();

    @SuppressWarnings("unused")
    ArrayList nodeArrayList1 = pop();
    PUserDefinedType puserdefinedtypeNode1;
    {
      // Block
      LinkedList listNode3 = new LinkedList();
      {
        // Block
        LinkedList listNode2 = new LinkedList();
        listNode2 = (LinkedList)nodeArrayList1.get(0);
        if (listNode2 != null) {
          listNode3.addAll(listNode2);
        }
      }

      puserdefinedtypeNode1 = new AUserDefinedType(listNode3);
    }
    nodeList.add(puserdefinedtypeNode1);
    return nodeList;
  }

  @SuppressWarnings("unchecked")
  ArrayList new46() /* reduce ALocalEnumTypeIdentifier */
  {
    @SuppressWarnings("hiding")
    ArrayList nodeList = new ArrayList();

    @SuppressWarnings("unused")
    ArrayList nodeArrayList1 = pop();
    LinkedList listNode2 = new LinkedList();
    {
      // Block
      TIdentifier tidentifierNode1;
      tidentifierNode1 = (TIdentifier)nodeArrayList1.get(0);
      if (tidentifierNode1 != null) {
        listNode2.add(tidentifierNode1);
      }
    }
    nodeList.add(listNode2);
    return nodeList;
  }

  @SuppressWarnings("unchecked")
  ArrayList new47() /* reduce AGlobalEnumTypeIdentifier */
  {
    @SuppressWarnings("hiding")
    ArrayList nodeList = new ArrayList();

    @SuppressWarnings("unused")
    ArrayList nodeArrayList3 = pop();
    @SuppressWarnings("unused")
    ArrayList nodeArrayList2 = pop();
    @SuppressWarnings("unused")
    ArrayList nodeArrayList1 = pop();
    LinkedList listNode3 = new LinkedList();
    {
      // Block
      TIdentifier tidentifierNode1;
      LinkedList listNode2 = new LinkedList();
      tidentifierNode1 = (TIdentifier)nodeArrayList1.get(0);
      listNode2 = (LinkedList)nodeArrayList3.get(0);
      if (tidentifierNode1 != null) {
        listNode3.add(tidentifierNode1);
      }
      if (listNode2 != null) {
        listNode3.addAll(listNode2);
      }
    }
    nodeList.add(listNode3);
    return nodeList;
  }

  @SuppressWarnings("unchecked")
  ArrayList new48() /* reduce AAoperation1Operation */
  {
    @SuppressWarnings("hiding")
    ArrayList nodeList = new ArrayList();

    @SuppressWarnings("unused")
    ArrayList nodeArrayList3 = pop();
    @SuppressWarnings("unused")
    ArrayList nodeArrayList2 = pop();
    @SuppressWarnings("unused")
    ArrayList nodeArrayList1 = pop();
    POperation poperationNode1;
    {
      // Block
      TIdentifier tidentifierNode2;
      LinkedList listNode3 = new LinkedList();
      tidentifierNode2 = (TIdentifier)nodeArrayList1.get(0);
      {
        // Block
      }

      poperationNode1 = new AOperation(tidentifierNode2, listNode3);
    }
    nodeList.add(poperationNode1);
    return nodeList;
  }

  @SuppressWarnings("unchecked")
  ArrayList new49() /* reduce AAoperation2Operation */
  {
    @SuppressWarnings("hiding")
    ArrayList nodeList = new ArrayList();

    @SuppressWarnings("unused")
    ArrayList nodeArrayList4 = pop();
    @SuppressWarnings("unused")
    ArrayList nodeArrayList3 = pop();
    @SuppressWarnings("unused")
    ArrayList nodeArrayList2 = pop();
    @SuppressWarnings("unused")
    ArrayList nodeArrayList1 = pop();
    POperation poperationNode1;
    {
      // Block
      TIdentifier tidentifierNode2;
      LinkedList listNode4 = new LinkedList();
      tidentifierNode2 = (TIdentifier)nodeArrayList1.get(0);
      {
        // Block
        LinkedList listNode3 = new LinkedList();
        listNode3 = (LinkedList)nodeArrayList3.get(0);
        if (listNode3 != null) {
          listNode4.addAll(listNode3);
        }
      }

      poperationNode1 = new AOperation(tidentifierNode2, listNode4);
    }
    nodeList.add(poperationNode1);
    return nodeList;
  }

  @SuppressWarnings("unchecked")
  ArrayList new5() /* reduce AListPackageElementList */
  {
    @SuppressWarnings("hiding")
    ArrayList nodeList = new ArrayList();

    @SuppressWarnings("unused")
    ArrayList nodeArrayList2 = pop();
    @SuppressWarnings("unused")
    ArrayList nodeArrayList1 = pop();
    LinkedList listNode3 = new LinkedList();
    {
      // Block
      LinkedList listNode1 = new LinkedList();
      PPackageElement ppackageelementNode2;
      listNode1 = (LinkedList)nodeArrayList1.get(0);
      ppackageelementNode2 = (PPackageElement)nodeArrayList2.get(0);
      if (listNode1 != null) {
        listNode3.addAll(listNode1);
      }
      if (ppackageelementNode2 != null) {
        listNode3.add(ppackageelementNode2);
      }
    }
    nodeList.add(listNode3);
    return nodeList;
  }

  @SuppressWarnings("unchecked")
  ArrayList new50() /* reduce AAdditionalEnumerator */
  {
    @SuppressWarnings("hiding")
    ArrayList nodeList = new ArrayList();

    @SuppressWarnings("unused")
    ArrayList nodeArrayList2 = pop();
    @SuppressWarnings("unused")
    ArrayList nodeArrayList1 = pop();
    return nodeList;
  }

  @SuppressWarnings("unchecked")
  ArrayList new51() /* reduce AAutomaticEnumerator */
  {
    @SuppressWarnings("hiding")
    ArrayList nodeList = new ArrayList();

    @SuppressWarnings("unused")
    ArrayList nodeArrayList1 = pop();
    PEnumerator penumeratorNode1;
    {
      // Block
      TIdentifier tidentifierNode2;
      tidentifierNode2 = (TIdentifier)nodeArrayList1.get(0);

      penumeratorNode1 = new AAutoEnumeratorEnumerator(tidentifierNode2);
    }
    nodeList.add(penumeratorNode1);
    return nodeList;
  }

  @SuppressWarnings("unchecked")
  ArrayList new52() /* reduce ASpecificEnumerator */
  {
    @SuppressWarnings("hiding")
    ArrayList nodeList = new ArrayList();

    @SuppressWarnings("unused")
    ArrayList nodeArrayList3 = pop();
    @SuppressWarnings("unused")
    ArrayList nodeArrayList2 = pop();
    @SuppressWarnings("unused")
    ArrayList nodeArrayList1 = pop();
    PEnumerator penumeratorNode1;
    {
      // Block
      TIdentifier tidentifierNode2;
      TDecimalConstant tdecimalconstantNode3;
      tidentifierNode2 = (TIdentifier)nodeArrayList1.get(0);
      tdecimalconstantNode3 = (TDecimalConstant)nodeArrayList3.get(0);

      penumeratorNode1 = new ASpecificEnumeratorEnumerator(tidentifierNode2,
          tdecimalconstantNode3);
    }
    nodeList.add(penumeratorNode1);
    return nodeList;
  }

  @SuppressWarnings("unchecked")
  ArrayList new6() /* reduce ASubpackagePackageElement */
  {
    @SuppressWarnings("hiding")
    ArrayList nodeList = new ArrayList();

    @SuppressWarnings("unused")
    ArrayList nodeArrayList1 = pop();
    PPackageElement ppackageelementNode1;
    {
      // Block
      PPackage ppackageNode2;
      ppackageNode2 = (PPackage)nodeArrayList1.get(0);

      ppackageelementNode1 = new ASubpackagePackageElement(ppackageNode2);
    }
    nodeList.add(ppackageelementNode1);
    return nodeList;
  }

  @SuppressWarnings("unchecked")
  ArrayList new7() /* reduce AClassWithoutTargetPackageElement */
  {
    @SuppressWarnings("hiding")
    ArrayList nodeList = new ArrayList();

    @SuppressWarnings("unused")
    ArrayList nodeArrayList4 = pop();
    @SuppressWarnings("unused")
    ArrayList nodeArrayList3 = pop();
    @SuppressWarnings("unused")
    ArrayList nodeArrayList2 = pop();
    @SuppressWarnings("unused")
    ArrayList nodeArrayList1 = pop();
    PPackageElement ppackageelementNode1;
    {
      // Block
      @SuppressWarnings("unused")
      Object nullNode2 = null;
      TIdentifier tidentifierNode3;
      LinkedList listNode4 = new LinkedList();
      LinkedList listNode5 = new LinkedList();
      tidentifierNode3 = (TIdentifier)nodeArrayList2.get(0);
      {
        // Block
      }
      {
        // Block
      }

      ppackageelementNode1 = new AClassPackageElement(null, tidentifierNode3,
          listNode4, listNode5);
    }
    nodeList.add(ppackageelementNode1);
    return nodeList;
  }

  @SuppressWarnings("unchecked")
  ArrayList new8() /* reduce AClassWithSupertypeWithoutTargetPackageElement */
  {
    @SuppressWarnings("hiding")
    ArrayList nodeList = new ArrayList();

    @SuppressWarnings("unused")
    ArrayList nodeArrayList6 = pop();
    @SuppressWarnings("unused")
    ArrayList nodeArrayList5 = pop();
    @SuppressWarnings("unused")
    ArrayList nodeArrayList4 = pop();
    @SuppressWarnings("unused")
    ArrayList nodeArrayList3 = pop();
    @SuppressWarnings("unused")
    ArrayList nodeArrayList2 = pop();
    @SuppressWarnings("unused")
    ArrayList nodeArrayList1 = pop();
    PPackageElement ppackageelementNode1;
    {
      // Block
      @SuppressWarnings("unused")
      Object nullNode2 = null;
      TIdentifier tidentifierNode3;
      LinkedList listNode5 = new LinkedList();
      LinkedList listNode6 = new LinkedList();
      tidentifierNode3 = (TIdentifier)nodeArrayList2.get(0);
      {
        // Block
        LinkedList listNode4 = new LinkedList();
        listNode4 = (LinkedList)nodeArrayList4.get(0);
        if (listNode4 != null) {
          listNode5.addAll(listNode4);
        }
      }
      {
        // Block
      }

      ppackageelementNode1 = new AClassPackageElement(null, tidentifierNode3,
          listNode5, listNode6);
    }
    nodeList.add(ppackageelementNode1);
    return nodeList;
  }

  @SuppressWarnings("unchecked")
  ArrayList new9() /* reduce AClassWithUsesWithoutTargetPackageElement */
  {
    @SuppressWarnings("hiding")
    ArrayList nodeList = new ArrayList();

    @SuppressWarnings("unused")
    ArrayList nodeArrayList5 = pop();
    @SuppressWarnings("unused")
    ArrayList nodeArrayList4 = pop();
    @SuppressWarnings("unused")
    ArrayList nodeArrayList3 = pop();
    @SuppressWarnings("unused")
    ArrayList nodeArrayList2 = pop();
    @SuppressWarnings("unused")
    ArrayList nodeArrayList1 = pop();
    PPackageElement ppackageelementNode1;
    {
      // Block
      @SuppressWarnings("unused")
      Object nullNode2 = null;
      TIdentifier tidentifierNode3;
      LinkedList listNode4 = new LinkedList();
      LinkedList listNode6 = new LinkedList();
      tidentifierNode3 = (TIdentifier)nodeArrayList2.get(0);
      {
        // Block
      }
      {
        // Block
        LinkedList listNode5 = new LinkedList();
        listNode5 = (LinkedList)nodeArrayList3.get(0);
        if (listNode5 != null) {
          listNode6.addAll(listNode5);
        }
      }

      ppackageelementNode1 = new AClassPackageElement(null, tidentifierNode3,
          listNode4, listNode6);
    }
    nodeList.add(ppackageelementNode1);
    return nodeList;
  }

  @SuppressWarnings("unchecked")
  public Start parse() throws ParserException, LexerException, IOException {
    push(0, null);
    List<Node> ign = null;
    while (true) {
      while (index(lexer.peek()) == -1) {
        if (ign == null) {
          ign = new LinkedList<Node>();
        }

        ign.add(lexer.next());
      }

      if (ign != null) {
        ignoredTokens.setIn(lexer.peek(), ign);
        ign = null;
      }

      last_pos = lexer.peek().getPos();
      last_line = lexer.peek().getLine();
      last_token = lexer.peek();

      int index = index(lexer.peek());
      action[0] = Parser.actionTable[state()][0][1];
      action[1] = Parser.actionTable[state()][0][2];

      int low = 1;
      int high = Parser.actionTable[state()].length - 1;

      while (low <= high) {
        int middle = (low + high) / 2;

        if (index < Parser.actionTable[state()][middle][0]) {
          high = middle - 1;
        } else if (index > Parser.actionTable[state()][middle][0]) {
          low = middle + 1;
        } else {
          action[0] = Parser.actionTable[state()][middle][1];
          action[1] = Parser.actionTable[state()][middle][2];
          break;
        }
      }

      switch (action[0]) {
      case SHIFT: {
        ArrayList list = new ArrayList();
        list.add(lexer.next());
        push(action[1], list);
      }
        break;
      case REDUCE:
        switch (action[1]) {
        case 0: /* reduce ADeclaration */
        {
          ArrayList list = new0();
          push(goTo(0), list);
        }
          break;
        case 1: /* reduce ASinglePackageList */
        {
          ArrayList list = new1();
          push(goTo(1), list);
        }
          break;
        case 2: /* reduce AListPackageList */
        {
          ArrayList list = new2();
          push(goTo(1), list);
        }
          break;
        case 3: /* reduce AUnversionedPackagePackage */
        {
          ArrayList list = new3();
          push(goTo(2), list);
        }
          break;
        case 4: /* reduce ASinglePackageElementList */
        {
          ArrayList list = new4();
          push(goTo(3), list);
        }
          break;
        case 5: /* reduce AListPackageElementList */
        {
          ArrayList list = new5();
          push(goTo(3), list);
        }
          break;
        case 6: /* reduce ASubpackagePackageElement */
        {
          ArrayList list = new6();
          push(goTo(4), list);
        }
          break;
        case 7: /* reduce AClassWithoutTargetPackageElement */
        {
          ArrayList list = new7();
          push(goTo(4), list);
        }
          break;
        case 8: /* reduce AClassWithSupertypeWithoutTargetPackageElement */
        {
          ArrayList list = new8();
          push(goTo(4), list);
        }
          break;
        case 9: /* reduce AClassWithUsesWithoutTargetPackageElement */
        {
          ArrayList list = new9();
          push(goTo(4), list);
        }
          break;
        case 10: /* reduce AClassWithSupertypeAndUsesWithoutTargetPackageElement */
        {
          ArrayList list = new10();
          push(goTo(4), list);
        }
          break;
        case 11: /* reduce AClassWithTargetPackageElement */
        {
          ArrayList list = new11();
          push(goTo(4), list);
        }
          break;
        case 12: /* reduce AClassWithSupertypeWithTargetPackageElement */
        {
          ArrayList list = new12();
          push(goTo(4), list);
        }
          break;
        case 13: /* reduce AClassWithUsesWithTargetPackageElement */
        {
          ArrayList list = new13();
          push(goTo(4), list);
        }
          break;
        case 14: /* reduce AClassWithSupertypeAndUsesWithTargetPackageElement */
        {
          ArrayList list = new14();
          push(goTo(4), list);
        }
          break;
        case 15: /* reduce AAinterfacepackageelement1PackageElement */
        {
          ArrayList list = new15();
          push(goTo(4), list);
        }
          break;
        case 16: /* reduce AAinterfacepackageelement2PackageElement */
        {
          ArrayList list = new16();
          push(goTo(4), list);
        }
          break;
        case 17: /* reduce AAinterfacewithsupertypepackageelement1PackageElement */
        {
          ArrayList list = new17();
          push(goTo(4), list);
        }
          break;
        case 18: /* reduce AAinterfacewithsupertypepackageelement2PackageElement */
        {
          ArrayList list = new18();
          push(goTo(4), list);
        }
          break;
        case 19: /* reduce AEnumDeclarationPackageElement */
        {
          ArrayList list = new19();
          push(goTo(4), list);
        }
          break;
        case 20: /* reduce ASingleUsesList */
        {
          ArrayList list = new20();
          push(goTo(5), list);
        }
          break;
        case 21: /* reduce AListUsesList */
        {
          ArrayList list = new21();
          push(goTo(5), list);
        }
          break;
        case 22: /* reduce ALocalTypeIdentifier */
        {
          ArrayList list = new22();
          push(goTo(6), list);
        }
          break;
        case 23: /* reduce AGlobalTypeIdentifier */
        {
          ArrayList list = new23();
          push(goTo(6), list);
        }
          break;
        case 24: /* reduce ASingleTypeList */
        {
          ArrayList list = new24();
          push(goTo(7), list);
        }
          break;
        case 25: /* reduce AListTypeList */
        {
          ArrayList list = new25();
          push(goTo(7), list);
        }
          break;
        case 26: /* reduce ASingleOperationList */
        {
          ArrayList list = new26();
          push(goTo(8), list);
        }
          break;
        case 27: /* reduce AListOperationList */
        {
          ArrayList list = new27();
          push(goTo(8), list);
        }
          break;
        case 28: /* reduce ASingleParameterList */
        {
          ArrayList list = new28();
          push(goTo(9), list);
        }
          break;
        case 29: /* reduce AListParameterList */
        {
          ArrayList list = new29();
          push(goTo(9), list);
        }
          break;
        case 30: /* reduce ASingleEnumeratorList */
        {
          ArrayList list = new30();
          push(goTo(10), list);
        }
          break;
        case 31: /* reduce AListEnumeratorList */
        {
          ArrayList list = new31();
          push(goTo(10), list);
        }
          break;
        case 32: /* reduce AIntBuiltInType */
        {
          ArrayList list = new32();
          push(goTo(11), list);
        }
          break;
        case 33: /* reduce ADoubleBuiltInType */
        {
          ArrayList list = new33();
          push(goTo(11), list);
        }
          break;
        case 34: /* reduce ABoolBuiltInType */
        {
          ArrayList list = new34();
          push(goTo(11), list);
        }
          break;
        case 35: /* reduce AOpaqueBuiltInType */
        {
          ArrayList list = new35();
          push(goTo(11), list);
        }
          break;
        case 36: /* reduce AStringBuiltInType */
        {
          ArrayList list = new36();
          push(goTo(11), list);
        }
          break;
        case 37: /* reduce AParameterInBuiltInParameter */
        {
          ArrayList list = new37();
          push(goTo(12), list);
        }
          break;
        case 38: /* reduce AParameterInoutBuiltInParameter */
        {
          ArrayList list = new38();
          push(goTo(12), list);
        }
          break;
        case 39: /* reduce AParameterArrayInBuiltInParameter */
        {
          ArrayList list = new39();
          push(goTo(12), list);
        }
          break;
        case 40: /* reduce AParameterArrayInoutBuiltInParameter */
        {
          ArrayList list = new40();
          push(goTo(12), list);
        }
          break;
        case 41: /* reduce AParameterInEnumParameter */
        {
          ArrayList list = new41();
          push(goTo(12), list);
        }
          break;
        case 42: /* reduce AParameterInoutEnumParameter */
        {
          ArrayList list = new42();
          push(goTo(12), list);
        }
          break;
        case 43: /* reduce AParameterArrayInEnumParameter */
        {
          ArrayList list = new43();
          push(goTo(12), list);
        }
          break;
        case 44: /* reduce AParameterArrayInoutEnumParameter */
        {
          ArrayList list = new44();
          push(goTo(12), list);
        }
          break;
        case 45: /* reduce ASingleEnumType */
        {
          ArrayList list = new45();
          push(goTo(13), list);
        }
          break;
        case 46: /* reduce ALocalEnumTypeIdentifier */
        {
          ArrayList list = new46();
          push(goTo(14), list);
        }
          break;
        case 47: /* reduce AGlobalEnumTypeIdentifier */
        {
          ArrayList list = new47();
          push(goTo(14), list);
        }
          break;
        case 48: /* reduce AAoperation1Operation */
        {
          ArrayList list = new48();
          push(goTo(15), list);
        }
          break;
        case 49: /* reduce AAoperation2Operation */
        {
          ArrayList list = new49();
          push(goTo(15), list);
        }
          break;
        case 50: /* reduce AAdditionalEnumerator */
        {
          ArrayList list = new50();
          push(goTo(16), list);
        }
          break;
        case 51: /* reduce AAutomaticEnumerator */
        {
          ArrayList list = new51();
          push(goTo(17), list);
        }
          break;
        case 52: /* reduce ASpecificEnumerator */
        {
          ArrayList list = new52();
          push(goTo(17), list);
        }
          break;
        }
        break;
      case ACCEPT: {
        EOF node2 = (EOF)lexer.next();
        PDeclaration node1 = (PDeclaration)pop().get(0);
        Start node = new Start(node1, node2);
        return node;
      }
      case ERROR:
        throw new ParserException(last_token, "[" + last_line + "," + last_pos +
            "] " + Parser.errorMessages[Parser.errors[action[1]]]);
      }
    }
  }

  private ArrayList pop() {
    return ((State)stack.previous()).nodes;
  }

  @SuppressWarnings({"unchecked", "unused"})
  private void push(int numstate, ArrayList listNode) throws ParserException,
      LexerException, IOException {
    nodeList = listNode;

    if (!stack.hasNext()) {
      stack.add(new State(numstate, nodeList));
      return;
    }

    State s = (State)stack.next();
    s.state = numstate;
    s.nodes = nodeList;
  }

  private int state() {
    State s = (State)stack.previous();
    stack.next();
    return s.state;
  }
}
