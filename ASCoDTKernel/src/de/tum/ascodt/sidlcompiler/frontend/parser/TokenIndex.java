/* This file was generated by SableCC (http://www.sablecc.org/). */

package de.tum.ascodt.sidlcompiler.frontend.parser;


import de.tum.ascodt.sidlcompiler.frontend.analysis.AnalysisAdapter;
import de.tum.ascodt.sidlcompiler.frontend.node.EOF;
import de.tum.ascodt.sidlcompiler.frontend.node.TArrayToken;
import de.tum.ascodt.sidlcompiler.frontend.node.TAsToken;
import de.tum.ascodt.sidlcompiler.frontend.node.TBoolToken;
import de.tum.ascodt.sidlcompiler.frontend.node.TClassToken;
import de.tum.ascodt.sidlcompiler.frontend.node.TComma;
import de.tum.ascodt.sidlcompiler.frontend.node.TConstant;
import de.tum.ascodt.sidlcompiler.frontend.node.TDecimalConstant;
import de.tum.ascodt.sidlcompiler.frontend.node.TDot;
import de.tum.ascodt.sidlcompiler.frontend.node.TDoubleToken;
import de.tum.ascodt.sidlcompiler.frontend.node.TEnumToken;
import de.tum.ascodt.sidlcompiler.frontend.node.TEquals;
import de.tum.ascodt.sidlcompiler.frontend.node.TExtendsToken;
import de.tum.ascodt.sidlcompiler.frontend.node.TIdentifier;
import de.tum.ascodt.sidlcompiler.frontend.node.TImplementsToken;
import de.tum.ascodt.sidlcompiler.frontend.node.TInToken;
import de.tum.ascodt.sidlcompiler.frontend.node.TInoutToken;
import de.tum.ascodt.sidlcompiler.frontend.node.TIntToken;
import de.tum.ascodt.sidlcompiler.frontend.node.TInterfaceToken;
import de.tum.ascodt.sidlcompiler.frontend.node.TLAngleBracket;
import de.tum.ascodt.sidlcompiler.frontend.node.TLBrace;
import de.tum.ascodt.sidlcompiler.frontend.node.TLBracket;
import de.tum.ascodt.sidlcompiler.frontend.node.TOpaqueToken;
import de.tum.ascodt.sidlcompiler.frontend.node.TPackageToken;
import de.tum.ascodt.sidlcompiler.frontend.node.TRAngleBracket;
import de.tum.ascodt.sidlcompiler.frontend.node.TRBrace;
import de.tum.ascodt.sidlcompiler.frontend.node.TRBracket;
import de.tum.ascodt.sidlcompiler.frontend.node.TSemicolon;
import de.tum.ascodt.sidlcompiler.frontend.node.TSignedDecimalNumber;
import de.tum.ascodt.sidlcompiler.frontend.node.TStringToken;
import de.tum.ascodt.sidlcompiler.frontend.node.TTargetToken;
import de.tum.ascodt.sidlcompiler.frontend.node.TUsesToken;


class TokenIndex extends AnalysisAdapter {
  int index;

  @Override
  public void caseEOF(@SuppressWarnings("unused") EOF node) {
    index = 31;
  }

  @Override
  public void caseTArrayToken(@SuppressWarnings("unused") TArrayToken node) {
    index = 15;
  }

  @Override
  public void caseTAsToken(@SuppressWarnings("unused") TAsToken node) {
    index = 25;
  }

  @Override
  public void caseTBoolToken(@SuppressWarnings("unused") TBoolToken node) {
    index = 12;
  }

  @Override
  public void caseTClassToken(@SuppressWarnings("unused") TClassToken node) {
    index = 19;
  }

  @Override
  public void caseTComma(@SuppressWarnings("unused") TComma node) {
    index = 2;
  }

  @Override
  public void caseTConstant(@SuppressWarnings("unused") TConstant node) {
    index = 30;
  }

  @Override
  public void caseTDecimalConstant(
      @SuppressWarnings("unused") TDecimalConstant node) {
    index = 27;
  }

  @Override
  public void caseTDot(@SuppressWarnings("unused") TDot node) {
    index = 3;
  }

  @Override
  public void caseTDoubleToken(@SuppressWarnings("unused") TDoubleToken node) {
    index = 11;
  }

  @Override
  public void caseTEnumToken(@SuppressWarnings("unused") TEnumToken node) {
    index = 26;
  }

  @Override
  public void caseTEquals(@SuppressWarnings("unused") TEquals node) {
    index = 9;
  }

  @Override
  public void caseTExtendsToken(@SuppressWarnings("unused") TExtendsToken node) {
    index = 22;
  }

  @Override
  public void caseTIdentifier(@SuppressWarnings("unused") TIdentifier node) {
    index = 29;
  }

  @Override
  public void caseTImplementsToken(
      @SuppressWarnings("unused") TImplementsToken node) {
    index = 23;
  }

  @Override
  public void caseTInoutToken(@SuppressWarnings("unused") TInoutToken node) {
    index = 17;
  }

  @Override
  public void caseTInterfaceToken(
      @SuppressWarnings("unused") TInterfaceToken node) {
    index = 21;
  }

  @Override
  public void caseTInToken(@SuppressWarnings("unused") TInToken node) {
    index = 16;
  }

  @Override
  public void caseTIntToken(@SuppressWarnings("unused") TIntToken node) {
    index = 10;
  }

  @Override
  public void
      caseTLAngleBracket(@SuppressWarnings("unused") TLAngleBracket node) {
    index = 0;
  }

  @Override
  public void caseTLBrace(@SuppressWarnings("unused") TLBrace node) {
    index = 5;
  }

  @Override
  public void caseTLBracket(@SuppressWarnings("unused") TLBracket node) {
    index = 7;
  }

  @Override
  public void caseTOpaqueToken(@SuppressWarnings("unused") TOpaqueToken node) {
    index = 13;
  }

  @Override
  public void caseTPackageToken(@SuppressWarnings("unused") TPackageToken node) {
    index = 18;
  }

  @Override
  public void
      caseTRAngleBracket(@SuppressWarnings("unused") TRAngleBracket node) {
    index = 1;
  }

  @Override
  public void caseTRBrace(@SuppressWarnings("unused") TRBrace node) {
    index = 6;
  }

  @Override
  public void caseTRBracket(@SuppressWarnings("unused") TRBracket node) {
    index = 8;
  }

  @Override
  public void caseTSemicolon(@SuppressWarnings("unused") TSemicolon node) {
    index = 4;
  }

  @Override
  public void caseTSignedDecimalNumber(
      @SuppressWarnings("unused") TSignedDecimalNumber node) {
    index = 28;
  }

  @Override
  public void caseTStringToken(@SuppressWarnings("unused") TStringToken node) {
    index = 14;
  }

  @Override
  public void caseTTargetToken(@SuppressWarnings("unused") TTargetToken node) {
    index = 20;
  }

  @Override
  public void caseTUsesToken(@SuppressWarnings("unused") TUsesToken node) {
    index = 24;
  }
}
