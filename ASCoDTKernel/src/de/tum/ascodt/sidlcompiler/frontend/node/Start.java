/* This file was generated by SableCC (http://www.sablecc.org/). */

package de.tum.ascodt.sidlcompiler.frontend.node;


import de.tum.ascodt.sidlcompiler.frontend.analysis.Analysis;


@SuppressWarnings("nls")
public final class Start extends Node {
  private PDeclaration _pDeclaration_;
  private EOF _eof_;

  public Start() {
    // Empty body
  }

  public Start(@SuppressWarnings("hiding") PDeclaration _pDeclaration_,
      @SuppressWarnings("hiding") EOF _eof_) {
    setPDeclaration(_pDeclaration_);
    setEOF(_eof_);
  }

  @Override
  public void apply(Switch sw) {
    ((Analysis)sw).caseStart(this);
  }

  @Override
  public Object clone() {
    return new Start(cloneNode(_pDeclaration_), cloneNode(_eof_));
  }

  public EOF getEOF() {
    return _eof_;
  }

  public PDeclaration getPDeclaration() {
    return _pDeclaration_;
  }

  @Override
  void removeChild(Node child) {
    if (_pDeclaration_ == child) {
      _pDeclaration_ = null;
      return;
    }

    if (_eof_ == child) {
      _eof_ = null;
      return;
    }

    throw new RuntimeException("Not a child.");
  }

  @Override
  void replaceChild(Node oldChild, Node newChild) {
    if (_pDeclaration_ == oldChild) {
      setPDeclaration((PDeclaration)newChild);
      return;
    }

    if (_eof_ == oldChild) {
      setEOF((EOF)newChild);
      return;
    }

    throw new RuntimeException("Not a child.");
  }

  public void setEOF(EOF node) {
    if (_eof_ != null) {
      _eof_.parent(null);
    }

    if (node != null) {
      if (node.parent() != null) {
        node.parent().removeChild(node);
      }

      node.parent(this);
    }

    _eof_ = node;
  }

  public void setPDeclaration(PDeclaration node) {
    if (_pDeclaration_ != null) {
      _pDeclaration_.parent(null);
    }

    if (node != null) {
      if (node.parent() != null) {
        node.parent().removeChild(node);
      }

      node.parent(this);
    }

    _pDeclaration_ = node;
  }

  @Override
  public String toString() {
    return "" + toString(_pDeclaration_) + toString(_eof_);
  }
}
