/* This file was generated by SableCC (http://www.sablecc.org/). */

package de.tum.ascodt.sidlcompiler.frontend.node;


import java.util.LinkedList;
import java.util.List;
import java.util.ListIterator;

import de.tum.ascodt.sidlcompiler.frontend.analysis.Analysis;


@SuppressWarnings("nls")
public final class ADeclaration extends PDeclaration {
  private final LinkedList<PPackage> _package_ = new LinkedList<PPackage>();

  public ADeclaration() {
    // Constructor
  }

  public ADeclaration(@SuppressWarnings("hiding") List<PPackage> _package_) {
    // Constructor
    setPackage(_package_);

  }

  @Override
  public void apply(Switch sw) {
    ((Analysis)sw).caseADeclaration(this);
  }

  @Override
  public Object clone() {
    return new ADeclaration(cloneList(_package_));
  }

  public LinkedList<PPackage> getPackage() {
    return _package_;
  }

  @Override
  void removeChild(@SuppressWarnings("unused") Node child) {
    // Remove child
    if (_package_.remove(child)) {
      return;
    }

    throw new RuntimeException("Not a child.");
  }

  @Override
  void replaceChild(@SuppressWarnings("unused") Node oldChild,
                    @SuppressWarnings("unused") Node newChild) {
    // Replace child
    for (ListIterator<PPackage> i = _package_.listIterator(); i.hasNext();) {
      if (i.next() == oldChild) {
        if (newChild != null) {
          i.set((PPackage)newChild);
          newChild.parent(this);
          oldChild.parent(null);
          return;
        }

        i.remove();
        oldChild.parent(null);
        return;
      }
    }

    throw new RuntimeException("Not a child.");
  }

  public void setPackage(List<PPackage> list) {
    _package_.clear();
    _package_.addAll(list);
    for (PPackage e : list) {
      if (e.parent() != null) {
        e.parent().removeChild(e);
      }

      e.parent(this);
    }
  }

  @Override
  public String toString() {
    return "" + toString(_package_);
  }
}
