/* This file was generated by SableCC (http://www.sablecc.org/). */

package de.tum.ascodt.sidlcompiler.frontend.analysis;

import java.util.*;
import de.tum.ascodt.sidlcompiler.frontend.node.*;

public class AnalysisAdapter implements Analysis
{
    private Hashtable<Node,Object> in;
    private Hashtable<Node,Object> out;

    public Object getIn(Node node)
    {
        if(this.in == null)
        {
            return null;
        }

        return this.in.get(node);
    }

    public void setIn(Node node, Object o)
    {
        if(this.in == null)
        {
            this.in = new Hashtable<Node,Object>(1);
        }

        if(o != null)
        {
            this.in.put(node, o);
        }
        else
        {
            this.in.remove(node);
        }
    }

    public Object getOut(Node node)
    {
        if(this.out == null)
        {
            return null;
        }

        return this.out.get(node);
    }

    public void setOut(Node node, Object o)
    {
        if(this.out == null)
        {
            this.out = new Hashtable<Node,Object>(1);
        }

        if(o != null)
        {
            this.out.put(node, o);
        }
        else
        {
            this.out.remove(node);
        }
    }

    public void caseStart(Start node)
    {
        defaultCase(node);
    }

    public void caseADeclaration(ADeclaration node)
    {
        defaultCase(node);
    }

    public void caseAPackage(APackage node)
    {
        defaultCase(node);
    }

    public void caseASubpackagePackageElement(ASubpackagePackageElement node)
    {
        defaultCase(node);
    }

    public void caseAClassPackageElement(AClassPackageElement node)
    {
        defaultCase(node);
    }

    public void caseAInterfacePackageElement(AInterfacePackageElement node)
    {
        defaultCase(node);
    }

    public void caseAEnumDeclarationPackageElement(AEnumDeclarationPackageElement node)
    {
        defaultCase(node);
    }

    public void caseAUses(AUses node)
    {
        defaultCase(node);
    }

    public void caseAUserDefinedType(AUserDefinedType node)
    {
        defaultCase(node);
    }

    public void caseAIntBuiltInType(AIntBuiltInType node)
    {
        defaultCase(node);
    }

    public void caseADoubleBuiltInType(ADoubleBuiltInType node)
    {
        defaultCase(node);
    }

    public void caseABoolBuiltInType(ABoolBuiltInType node)
    {
        defaultCase(node);
    }

    public void caseAOpaqueBuiltInType(AOpaqueBuiltInType node)
    {
        defaultCase(node);
    }

    public void caseAStringBuiltInType(AStringBuiltInType node)
    {
        defaultCase(node);
    }

    public void caseAOperation(AOperation node)
    {
        defaultCase(node);
    }

    public void caseAParameterInParameter(AParameterInParameter node)
    {
        defaultCase(node);
    }

    public void caseAParameterArrayInParameter(AParameterArrayInParameter node)
    {
        defaultCase(node);
    }

    public void caseAParameterOutParameter(AParameterOutParameter node)
    {
        defaultCase(node);
    }

    public void caseAParameterArrayOutParameter(AParameterArrayOutParameter node)
    {
        defaultCase(node);
    }

    public void caseAParameterInEnumParameter(AParameterInEnumParameter node)
    {
        defaultCase(node);
    }

    public void caseAParameterOutEnumParameter(AParameterOutEnumParameter node)
    {
        defaultCase(node);
    }

    public void caseAParameterArrayOutEnumParameter(AParameterArrayOutEnumParameter node)
    {
        defaultCase(node);
    }

    public void caseAParameterArrayInEnumParameter(AParameterArrayInEnumParameter node)
    {
        defaultCase(node);
    }

    public void caseAAutoEnumeratorEnumerator(AAutoEnumeratorEnumerator node)
    {
        defaultCase(node);
    }

    public void caseASpecificEnumeratorEnumerator(ASpecificEnumeratorEnumerator node)
    {
        defaultCase(node);
    }

    public void caseTLAngleBracket(TLAngleBracket node)
    {
        defaultCase(node);
    }

    public void caseTRAngleBracket(TRAngleBracket node)
    {
        defaultCase(node);
    }

    public void caseTComma(TComma node)
    {
        defaultCase(node);
    }

    public void caseTDot(TDot node)
    {
        defaultCase(node);
    }

    public void caseTSemicolon(TSemicolon node)
    {
        defaultCase(node);
    }

    public void caseTLBrace(TLBrace node)
    {
        defaultCase(node);
    }

    public void caseTRBrace(TRBrace node)
    {
        defaultCase(node);
    }

    public void caseTLBracket(TLBracket node)
    {
        defaultCase(node);
    }

    public void caseTRBracket(TRBracket node)
    {
        defaultCase(node);
    }

    public void caseTEquals(TEquals node)
    {
        defaultCase(node);
    }

    public void caseTIntToken(TIntToken node)
    {
        defaultCase(node);
    }

    public void caseTDoubleToken(TDoubleToken node)
    {
        defaultCase(node);
    }

    public void caseTBoolToken(TBoolToken node)
    {
        defaultCase(node);
    }

    public void caseTOpaqueToken(TOpaqueToken node)
    {
        defaultCase(node);
    }

    public void caseTStringToken(TStringToken node)
    {
        defaultCase(node);
    }

    public void caseTArrayToken(TArrayToken node)
    {
        defaultCase(node);
    }

    public void caseTInToken(TInToken node)
    {
        defaultCase(node);
    }

    public void caseTInoutToken(TInoutToken node)
    {
        defaultCase(node);
    }

    public void caseTPackageToken(TPackageToken node)
    {
        defaultCase(node);
    }

    public void caseTClassToken(TClassToken node)
    {
        defaultCase(node);
    }

    public void caseTTargetToken(TTargetToken node)
    {
        defaultCase(node);
    }

    public void caseTInterfaceToken(TInterfaceToken node)
    {
        defaultCase(node);
    }

    public void caseTExtendsToken(TExtendsToken node)
    {
        defaultCase(node);
    }

    public void caseTImplementsToken(TImplementsToken node)
    {
        defaultCase(node);
    }

    public void caseTUsesToken(TUsesToken node)
    {
        defaultCase(node);
    }

    public void caseTAsToken(TAsToken node)
    {
        defaultCase(node);
    }

    public void caseTEnumToken(TEnumToken node)
    {
        defaultCase(node);
    }

    public void caseTBlank(TBlank node)
    {
        defaultCase(node);
    }

    public void caseTDecimalConstant(TDecimalConstant node)
    {
        defaultCase(node);
    }

    public void caseTSignedDecimalNumber(TSignedDecimalNumber node)
    {
        defaultCase(node);
    }

    public void caseTIdentifier(TIdentifier node)
    {
        defaultCase(node);
    }

    public void caseTTraditionalComment(TTraditionalComment node)
    {
        defaultCase(node);
    }

    public void caseTDocumentationComment(TDocumentationComment node)
    {
        defaultCase(node);
    }

    public void caseTEndOfLineComment(TEndOfLineComment node)
    {
        defaultCase(node);
    }

    public void caseTConstant(TConstant node)
    {
        defaultCase(node);
    }

    public void caseEOF(EOF node)
    {
        defaultCase(node);
    }

    public void defaultCase(@SuppressWarnings("unused") Node node)
    {
        // do nothing
    }
}
