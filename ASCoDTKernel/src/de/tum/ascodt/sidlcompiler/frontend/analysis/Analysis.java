/* This file was generated by SableCC (http://www.sablecc.org/). */

package de.tum.ascodt.sidlcompiler.frontend.analysis;

import de.tum.ascodt.sidlcompiler.frontend.node.*;

public interface Analysis extends Switch
{
    Object getIn(Node node);
    void setIn(Node node, Object o);
    Object getOut(Node node);
    void setOut(Node node, Object o);

    void caseStart(Start node);
    void caseADeclaration(ADeclaration node);
    void caseAPackage(APackage node);
    void caseASubpackagePackageElement(ASubpackagePackageElement node);
    void caseAClassPackageElement(AClassPackageElement node);
    void caseAInterfacePackageElement(AInterfacePackageElement node);
    void caseAEnumDeclarationPackageElement(AEnumDeclarationPackageElement node);
    void caseAUses(AUses node);
    void caseAUserDefinedType(AUserDefinedType node);
    void caseAIntBuiltInType(AIntBuiltInType node);
    void caseADoubleBuiltInType(ADoubleBuiltInType node);
    void caseABoolBuiltInType(ABoolBuiltInType node);
    void caseAOpaqueBuiltInType(AOpaqueBuiltInType node);
    void caseAStringBuiltInType(AStringBuiltInType node);
    void caseAOperation(AOperation node);
    void caseAParameterInParameter(AParameterInParameter node);
    void caseAParameterArrayInParameter(AParameterArrayInParameter node);
    void caseAParameterOutParameter(AParameterOutParameter node);
    void caseAParameterArrayOutParameter(AParameterArrayOutParameter node);
    void caseAParameterInEnumParameter(AParameterInEnumParameter node);
    void caseAParameterOutEnumParameter(AParameterOutEnumParameter node);
    void caseAParameterArrayOutEnumParameter(AParameterArrayOutEnumParameter node);
    void caseAParameterArrayInEnumParameter(AParameterArrayInEnumParameter node);
    void caseAAutoEnumeratorEnumerator(AAutoEnumeratorEnumerator node);
    void caseASpecificEnumeratorEnumerator(ASpecificEnumeratorEnumerator node);

    void caseTLAngleBracket(TLAngleBracket node);
    void caseTRAngleBracket(TRAngleBracket node);
    void caseTComma(TComma node);
    void caseTDot(TDot node);
    void caseTSemicolon(TSemicolon node);
    void caseTLBrace(TLBrace node);
    void caseTRBrace(TRBrace node);
    void caseTLBracket(TLBracket node);
    void caseTRBracket(TRBracket node);
    void caseTEquals(TEquals node);
    void caseTIntToken(TIntToken node);
    void caseTDoubleToken(TDoubleToken node);
    void caseTBoolToken(TBoolToken node);
    void caseTOpaqueToken(TOpaqueToken node);
    void caseTStringToken(TStringToken node);
    void caseTArrayToken(TArrayToken node);
    void caseTInToken(TInToken node);
    void caseTInoutToken(TInoutToken node);
    void caseTPackageToken(TPackageToken node);
    void caseTClassToken(TClassToken node);
    void caseTTargetToken(TTargetToken node);
    void caseTInterfaceToken(TInterfaceToken node);
    void caseTExtendsToken(TExtendsToken node);
    void caseTImplementsToken(TImplementsToken node);
    void caseTUsesToken(TUsesToken node);
    void caseTAsToken(TAsToken node);
    void caseTEnumToken(TEnumToken node);
    void caseTBlank(TBlank node);
    void caseTDecimalConstant(TDecimalConstant node);
    void caseTSignedDecimalNumber(TSignedDecimalNumber node);
    void caseTIdentifier(TIdentifier node);
    void caseTTraditionalComment(TTraditionalComment node);
    void caseTDocumentationComment(TDocumentationComment node);
    void caseTEndOfLineComment(TEndOfLineComment node);
    void caseTConstant(TConstant node);
    void caseEOF(EOF node);
}
